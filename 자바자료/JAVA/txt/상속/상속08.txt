상위클래스로 만드는걸 우리가 업캐스팅이라고 말을 했죠 상위클래스의 형변환은 임플리시트하게 일어난다.

라고 했는데 이제 하위클래스로 다시 이게 아무때나 내려오는건 아니구요 원래 그 클래스였었던거 인스턴스가 

원래 휴먼이었는데 애니멀로 바겼다가 휴먼으로 돌아오는 겁니다. 원래 그 인스턴스로 돌아오는거를 다운 캐스팅

이라고 해요 그리고 나중에 우리가 오브젝트 클래스를 아직 안배웠는데 오브젝트 클래스로 반환이 되는 경우들이 

있어요 그러면 오브젝트클래스 모든 클래스 최상위클래스고 그러다  보면 오브젝트클래스로 다형변환이 이루어

질수도 있거든요 그리고 나중에 오브젝트클래스에서 원래 클래스로 돌아갈려고 할때도 다운캐스팅을 쓸수가 

있죠 음 일단 그냥 바로 대입을 할순 없습니다. 말씀드렸듯이 업캐스팅은 임플리시트하게 묵시적으로 일어나지만 

다운캐스팅은 명시적으로 해줘야 되구요 그다음에 명시적으로 할때 문제가 발생할수 있어요 여기보시면 커스토머

vc에서 요때는 문제가 없습니다. 왜냐면 애가 VIP커스토머데 애를 VIP커스토머로 만드는 거니까 타입에 맞게 

그런데 코드 잠깐 보시면 여기 그전에 했던 커스토머 테스트 부분인데 출력부분을 잠깐 주석으로 처리를 하구요 

for전체를 주석처리하고 지금 여기보시면 커스토머E는 골드커스토머에요 골드커슽토머데 VIPCustomer vc = 

(VIPCustomer) customerE; 컴파일에러는 안납니다. 왜냐면 이클립스가 customerE 인스턴스안에 타입까지 알수는 

없어요 그냥 어디만 보냐면 (VIPCustomer)와 왼쪽에 VIPCustomer가 같은지만 봐요 커스토머E는 원래 골드커스토머

였거든요 RUN을 해보시면 에러가 나요 커스토머E가 골드데 VIP로는 할수가 없다라고 나오는 오류입니다. 그래서

이렇게 이제 변환을 할때 애에 대해서 직접 물어보는거에요 if(customerE instanceof VIPCustomer)인지 물어봐서 

이게 true인경우만 그죠 이렇게 변환을 하겠단 거에요 VIPCustomer vc = (VIPCustomer) customerE; 그러면 여기서

Run을 해보면 아무런 액션이 없어요 이코드로 들어가질 않았으니까 커스토머E가 원래 뭐에요 골드잖아요 

그럼 여기서  골드로 이렇게 해볼까요 GoldCustomer vc = (GoldCustomer) customerE; customerE.showCustomerInfo();

System.out.println(customerE.showCustomerInfo()); 이렇게 하고서 run해보시면 잘 나오죠 그래서 요인스턴스오브 키워드

의 역할이 뭐냐면 customerE인스턴스가 원래 인스턴스of 뒤에 타입의 인스턴스였냐라는거를 확인해주는 좀더 이게 분명히

안전하죠 바로바로 원래 이거였어 바로바로 하다가는 자바가 다운될수도 있죠 인스턴스of를 쓰지않고 자바가 죽을수가 

있어요 타입이 맞지 않으니까  물론 웬만하면 자바는 죽지 않지만 자 형을 인스턴스of로 체크를 해서 맞는지를 보고 타입이

맞으면 true아니면  false가 반환이 되니까 인스턴스of죠 이름자체도 인스턴스가 맞냐 우리가 예전에 했던 애니멀 그쪽을 

한번보시고 요기를 다운캐스팅을 다시해서 휴먼이면 휴먼에 아니면 타이거면 타이거에 이글이면 이글에 메서드가 호출

되는거를 한번 구현을 해보도록 하죠 자 요전에 에니멀테스트가 있었죠 패키지를 생성해서 kr.or.kh08이죠 

에니멀테스트를 복사를 하시구요 구현은 다해놨었잖아요 그럼 여기서 다운캐스팅하는 부분만 run해볼게요 

어레이리스트에 다  넣어놨는데 이 어레이리스트를 매개변수로 주면서 다운캐스팅을 하는 메소드를 한번 구현을 

해보겠습니다. 무브에니멀함수 위에다가 

public void testDownCasting(ArrayList<Animal> list ){

}

에니멀어레이리스트가 넘어올거다 요렇게 테스트다운캐스팅에 받으시고 그러면 리스트에 하나하나씩 꺼내면서 꺼낸게

타이거면 타이거로 변환하고 휴먼이면 휴먼으로 변환하고 요렇게 하면 되겠죠 그러면 요번에는 for를 한번 써 볼게요

for(int i=0;i<list.size();i++){

}

일단은 하나를 배열에서 꺼내옵니다. 에니멀이었죠 Animal animal = list.get(i); 이에니멀이 if에서 휴먼이냐 보는거죠 

if(animal instanceof Human){

}

휴먼으로 변환해 주면  되겠져

Human human = (Human) animal;
haman.readBook(); 할수 있잖아요 이렇게 해줄겁니다. 나머지도 좀 비슷해요 좀 작업좀더  할게요

if(animal instanceof Human){
   Human human = (Human) animal;
   human.readBook();
} else if(animal instanceof Tiger){
  Tiger tiger = (Tiger) animal;
  tiger.hunting();
} else if(animal instanceof Eagle){
  Eagle eagle = (Eagle) animal;
  eagle.flying();
} else {
  System.out.println("unsupported type");
}

main안에 test.testDownCasting(animalList);

run을 해보시면 위에 3줄까지는 무브 for반복문 에니멀.무브가 출력된거구요 

사람이 책을 읽습니다. 호랑이가 사냥을 합니다. 독수리가  양날개를 쭉 펴고 날아다닙니다.

다운캐스팅에의해서 원래의 타입으로 돌아가는거죠 어 할수있다라고 하면 굳이 다운캐스팅을 쓰면 

보시다시피 코드가 많이 지저분해지고 각 타입으로 다시 되돌려야되고 이런경우가 많이 있습니다. 

그래서 할수 있다라고 하면 그냥 폴리모피즘 다형성으로 오버라이딩을 해서 사용할수 있는게 코드가

훨씬 깔끔해요 그렇게 하시고 근데 반드시 원래타입으로 되돌려야한다라고 하면 인스턴스오브로 체크를 

하신다음에 하시면 된다. 라고 말씀을 드리겠습니다. 자 요기까지 수업을 하도록 하겠습니다. 