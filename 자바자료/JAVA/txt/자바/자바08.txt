문자를 어떻게 컴퓨터 안에서 표현을 하고 그거를 활용하느냐를 것을 살펴볼건데요 

우리가 여기서 자세하게 알아야 하는게 문자 인코딩이라는게 있는데 그게 어떻게 만들어져 있는지 요런것들도 좀 같이 알아보도록 하겠습니다. 

우리가 생각해봤을때 A라는 문자가 있어요 A라는 문자를 컴퓨터에서 어떻게 표현을 할것이냐 라고 했을때 이거를 어떤 특정한 숫자로 표현을 하자라고 약속을 한겁니다.

그 숫자가 뭐가 되냐면  우리가 약속한 값이 되는거구요 그값을 컴퓨터안에 비트로 표현이 되게 되면 나중에 A라고 표현이 나오는거죠 그 약속을 한것들을 우리가 뭐라고 하냐면 문자셋트라는

표현을 씁니다. 이런 약속이 되 있는 A는 얼마로 표현하고 B는 얼마로 표현하고  달러는 얼마로 표현하고  이렇게 약속이 되어 있는 것이 있어요 문자셋트라고 하는데 그래서 A라는 값이 아스키코드로 

65데 ASCII라는 문자세트가 있죠 애는 8비트라고 되있습니다. 한바이트 2의8승이죠 256이란말이에요 알파벳이 대소문자가 52개 특수문자 숫자 한바이트로 다 표현을 할수가 있었어요 

처음에 아스키코드표가 나왔고 아스키코드표에 의해서 A는 65다 약속을 한거죠 A가 65로 바뀌는 요과정을 인코딩이라고 하고요 65인값이 A로 바뀌는 과정을 디코딩이라고 합니다.

나중에 세월이 흘러서 우리가 영어만 쓰는게 아니잖아요 한글도 쓰고 중국어도 쓰고 일본어도 쓰면서 자기나라에 맞는 문자 셋트가 나왔어요  우리나라에는 euc-kr이라는게 나왔죠 그래서이렇게 나오다 보니 

각 나라에 문자 셋트가 다 달라서 호환이 안되는거에요 호환이 안되겠죠 모든 나라의 코드를 하나로 하자 UNICODE라는게 나왔고 유니코드에 대한 문자 세트에  종류가 크게 두가지로 나온다. utf-8, utf-16

요렇게 있습니다. 여러분들이 많이 들었던 용어를 정리를 해드렸고 유니코드(2바이트기준) euc-kr도 마찬가진데 2바이트로 표현을 해요 총 16비트죠 2의16승까지 표현을 할수가 있고 각 나라 언어마다 코드표를 

줬습니다. 한바이트는 아스키와 완벽하게 호환이 되고 euc-kr도 마찬가진데  멀티바이트로 쓰게 되면 한바이트만 쓰게 되는 경우에는 아스키랑 완변하게 호환이 되고 두바이트를 쓸때 다른언어들을 쓸때 같이 

표현해서 씁니다. 한바이트를 쓸때는 앞에가 8비트가 다 영이겠죠 유니코드는 아스키랑 완벽하게 호환이 된다. 자바에서는 문자를 어떻게 표현하냐면 자바에서는 유니코드를 사용하는데 utf-16인코딩을 사용을 

합니다. 모든 문자를 2바이트를 표시를 해요 utf-8하고 utf-16의 차이를 잠깐 말씀을 드리면  utf-16은 모든 문자를 16비트로 표현을 하는것이고 utf-8같은 경우는 한 바이트에서 4바이트 좀 유동적으로 표현을 

해요 아스키같은 경우는 내가 영문만을 쓴다 영문으로 채팅을할때 영문데이터만으로 쓴다하면 2바이트를 쓰게되면 오버헤드가 있잖아요 그죠 두배가 된다말이에요 바이트가 인터넷이나 네트워크통신등을 

할때는 utf-8을 더 많이 씁니다. 그래서 좀더 효율적으로 멀티바이트를 한바이트를 쓸수도 있고  4바이트를 쓸수도 있고 2바이트를 쓸수도 있고 요런식으로 사용하는게 utf-8인코딩방식입니다. 

문자를 위해서 자바에서 데이터타입이 제공되는거는 char 케릭터라고 이야기를 하고요 A라고 씁니다. 여러분들이 잠깐 말씀을 드리면 문자를 쓸때는 작은따옴표 'A' 두바이트짜리 문자를 나타내는거구요

  "A" 큰따옴표 문자열이라고 이야기를 합니다. 자바에서 나중에 보시면 알겠지만 String이라는 클레스에서 문자열을 제공을 하고요 이거는 속을 들여다보면 A가있고 문자열의 끝을 나타내는 널(\0)캐릭터가 

같이 있습니다.  애는 인제 딱두바이트짜리고 뒤에거는 문자열이라는 애다. 가끔 프로그램하실때 문자를 문자열처럼 오해하실수 있는데 오해하시면 안돼요 자그래서 우리가 사용할려는 char ch = 'A'; 선언을 

하시면 되는데 아까도 말씀드렸듯이 이게 문자로 프로그래밍에선 되어 있지만 실제적으로는 컴퓨터안에서는 숫자로 되어있다고 말씀을 드렸죠 숫자로도 쓸수가 있고 문자로도 쓸수가 있다. 다만 애는 양수만 

쓸수 있어요 음수는 쓸수가 없습니다. 음수는 쓸수없고 양수만 쓸수있다. 

실습

package생성->kr.or.kh08->클래스생성CharacterTest->

여기에다가 char를 한번선언을 해볼게요 char ch1 = 'A';를 여기에다 썻죠 한번 출력을 해볼게요 아까 뭐라고 말씀을 드렸냐면 애가 정수로 안에 들어가 있다. 정수로 한번 출력이 되나 한번확인해 보고 싶죠

이거는 타입캐스팅인데 뒤에서 형변환에서 한번더 말씀을 드릴겁니다. ch1이라는 문자형을 int형으로 강제 변환을 하는거에요 A라는 문자가 나왔구요 그뒤에 숫자가 나왔습니다. 

그다음에 두번째 예제를 char ch2 = 66;문자니깐 작은따옴표 이용해서 쓰는게 맞는데 이번엔 일부러 숫자를 한번 써봤어요 숫자를 썻을때는 어떻게 출력이 되냐 보면 ch2를 출력했을때와 (char)ch2형변환

했을때의 출력을 보면 B라고 둘다 나오는것을 확인할수가 있습니다. ch2가 캐릭터타입이기 때문에 밑에 캐스팅이 의미가 없죠 위에 예제에 타입이 다를때는 캐스팅을 하는건데 두번째 예제는 두라인이 똑같이

출력이 된다. 어쨌든 ch2는 캐릭터로 인식이 되서 출력이 된다라는거 근데 우리가 캐릭터쓸때 우리가 이렇게 숫자를 쓰진 않겠죠 문자를 쓰니깐 식별하기가 가독성을 위해서 당연히 문자를 씁니다. 

인티져로 67이라고 넣었어요 그리고 나서 애를 출력을 하면 당연히 ch3는 인티져로 67이 출력이 되겠죠 근데 아까도 말씀드린것처럼 ch3을 강제로 인티져로 캐스팅을 해보겠다. 출력을 하면 67에 

아스키코드값에 해당이 되는 유니코드지만 유니코드가 아스키랑은 다 호환이 된다고 말씀은 드렸죠 그거에 대한 문자는 뭐냐 C로 출력이 되는것을 볼수가 있습니다. 그래서 여기서 알아두셔야 되는 부분은 

케릭터 자료형은 2바이트로 자바에서 쓰고 유니코드로 쓰고 그다음에 이자료형의 특징은 내부적으로 정수값을 해당되는 코드값의 정수값을 가지고 있다라고 말씀을 드릴수가 있구요 

char ch = -66; 요렇게 쓰면 이값은 들어갈수가 없습니다. 음수는 사용할수 없다고 했죠 양수만 사용할수 있습니다. 가끔 어떤 책들을 보면 문자형을 정수형 데이터타입에 포함하는 경우들도 있어요 

그게 완전히 틀린건 아니에요 왜냐면 정수를 가지고 핸들링할수 있기 때문에 그렇지만 다른정수형들하고 차이는 음수는 쓸수 없다.라는걸 아시면 되겠고 역시 마찬가지로 너무 큰숫자 2바이트이내에서 

핸들링할수 없는 숫자는 들어갈수 없겠죠 유니코드를 말씀을 드렸는데 유니코드를 쓰실때에는 어떻게 쓰시면 되냐면 '\u'를 하시고 코드값을 쓰시면 돼요 코드값을 모르시죠 유니코드 표가 있습니다.

거기서 코드값을 찾으실수 있는데  당연히 내가 한글을 쓰겠다라고 하면 char han='한'; 이렇게 쓰시면 됩니다. 이렇게 쓰시면 되는데 내가 이거를 유니코드값으로 한번 써보겠다.  이걸 직접 찾아보면 

되거든요 조금 있다 보여드릴텐데 '\uD55C';요값이거든요 16진수로 표현이 되어 있죠 저번에 16진수 말씀을 드렸고 16진수는 숫자하나가 4비트로 표현이 됩니다. 그럼 지금 이게  숫자가 4개니까 

16비트겠네요 그럼 2바이트 딱 맞고요 요게 뭐를 찍는지 확인해 볼까요 당연히 한이라는 변수는 한을 찍을것이고 ch변수가 유니코드값으로 한이라는 거를 나타내는거를 보실수가 있습니다. 

문자자료형을 말씀드리면서 제가 여러 용어를 말씀드렸어요 그용어에 대한 정리를 여기에다가 해놨습니다. 보시고 잘이해를 하시면 될것 같구요 이미 말씀드린 부분이기 때문에  이제 따로 말씀을 드리진 

않겠습니다. 여기다 용어를 잠깐 설명을 해놨어요 한을 한번 찾아봤거든요 행과열이 매핑이 돼서 하나의 글자를 표현한다. 자 이번시간에 자바에서 문자를 어떻게 표현하느냐 같이 보셨고 간단한 예제도 

한번 돌려봤습니다. 다음에는 우리가 자바의 자료형에 대해서 거의다 이야기를 했고 이제 논리형 true false를 나타내는 논리자료형 하나하고 그다음에 자바가 업그레이드되면서 자바10부터 

뭐가 가능해졌냐면 자료형을 명시하지 않고 변수를 쓰는것이 가능해졌습니다. 그 내용에대해서 같이 말씀을 드리겠습니다. 




질문
1. 자바는 2바이트 4바이트 표현이 가능한데, C언어는 1바이트밖에 표현이안되면 호환이안되는경우가 많나요? 프로그램적으로 다 호환이 되는가?





