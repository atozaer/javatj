실수가 어떻게 프로그래밍에서 어떻게 표현되는지에 대해서 설명을 드리겠습니다. 

실수를 생각을 해 보면요 실수는 주로 이런식으로 쓰여 있죠 1.2 라든가 3.14 이런식으로 실수가 표현이 되는데 

1이 정수부고 2가 소수점 이하부분이잖아요 이 두 부분을 1를 따로 표현하잖아요 2를 따로표현하면 좋겠다. 라고 생각을 할수가 있습니다. 

지금도 일부 시스템은 그렇게 필요에 의해서 그렇게 표현을 할수 있습니다. 그런데 그렇게 표현을 하면 0과 1사이의 있는 소수라는게 무수히 많잖아요 

무수히 많은 소수를 표현하기는 정말 힘듭니다. 한정된 비트안에서 이제 어떻게 표현을 하냐면 부동소수점 방식이라는걸 표현합니다. 부동소수점방식이라는 건

뭐냐면 3.14가 있을때 이숫자를 어떻게 표현할수 있느냐 0.1이라는 값을 표현한다고 했을때  1.0 x 10의 -1승이다 라고 표현할수 있구요 이때 1.0을 가수라고 하고 

-1을 지수라고 표현을 합니다. 지수랑가수부분을 비트로 나누어서 표현을 해요 크게 여기서 사용하는 자료형을 보시면 플롯트와 더블형 두가지가 있는데 

플롯트같은 경우는 4바이트를 사용을 하구요 더블같은 경우는 8바이트를 사용합니다. 이중에 특정한 개수의 비트를 지수부랑 가수부에 할당을 합니다.

플롯트같은 경우는 4바이트지만 지수부에 8비트 가수부에 23비트 맨앞에는 부호비트가 되겠죠 더블같은 경우는 총 64비트데 그래서 가수부에 52비트 지수부에 11비트

요렇게 할당을 하죠 요렇게 할당을 하게되면 많은 실수를 표현할수 있다는 장점을 볼수 있습니다. 우리가 여기서 잠깐 살펴볼게요 정규화라는 애기가 있거든요 이것은 

여러분들이 반드시 이해해야 하는 부분은 아니지만 1.0 X 10마이너스1승이다. 할때 1.0가수부 -1지수부라고 표현을 했잖아요 근데 요렇게 비트를 표현을 하면 

2의 N승으로 표현이 될겁니다. -1밑에 10을 수를 밑수라고 표현을 합니다. 요게 2로 표현이 되는 경우가 많구요  밑수가 2인경우에 앞에 있는 가수의 첫번째 수가 

밑수보다 작게 표현되는 이걸 정규화한다라는 표현을 써요 가령 예를들어 0.2라고 했을때 그냥 일반적으로 2의 N승으로 해서 표현을 한다면 0.4X2의 마이너스1승

0.2되겠죠 앞에 있는 0.4를 정수화시켜서 2보다 작은수로 1.6 X 2의 마이너스3 요렇게 표현하는 것을 실수를 정규화한다고 하고요 대부분의 실수는 어떻게 표현하냐면 

1.m X 2마이너스n승 요렇게 표현이 될수 있다. 여러분들이 다른 책을 봐도 컴퓨터에서 부동소수점 실수는 이렇게 표현한다 라고 많이 나와있을 거에요  그이유는 앞에 

내용때문이다. 

실습 이클립스켜보실까요?

패키지생성(kr.or.kh07)->class생성(DoubleTest)main생성합니다.-> double dnum=3.14; 우리가 제일 많이 쓰는거 원주율 3.14 그다음에 float라는 데이터타입도 있다. 4바이트고

float fnum = 3.14; 아래쪽에는 오류가 뜨죠 위에는 오류가 뜨지 않습니다. 정수에 이런 숫자들 여기선 실수가 되겠네요 이런숫자들이 컴퓨터 내부에서 지정된 데이터타입으로 저장이 

된다고 말씀드렸고 double은 8바이트고 float는 4바이트지만 이숫자들은 메모리에 어딘가에 저장된다고 말씀을 드렸어요 정수같은경우는 인티져 4바이트로 메모리어딘가에 저장이 

된다고 말씀드렸고 인티져의 범위를 넘어가는 숫자는 롱에다가 넣을수 있는데 그때 뒤에 L이라는 식별자를 써주셔야 된다. 라고 말씀을 드렸습니다. 여기도 마찬가지에요 

지금 모든 실수를 이런것들을 실수 리터럴이라고 애기할겁니다. 이런리터럴들은 실수는 모두 double에 저장이 되요  8바이트에 저장이 되는거죠 그래서 요때 더블형에 변수에 들어갈때는 아무런

문제가 없습니다. 그런데 float는 4바이트뿐이 안돼는데 8바이트로 잡혀있는걸 복사해서 온거거든요 그래서 변수에 집어넣을려고하니까 그래서 애가 너무 크다라고 하는거죠 그때는 여기가 

float타입으로 저장을 시켜라 float타입으로 핸들링을 해라라는 의미로 뒤에다가 f를 라지F를 스몰f를 쓰셔도 상관없습니다. 대소문자상관없고 이렇게 쓰시면 된다.

우리가 프로그램할때 가끔 햇깔릴때가 있는데 이게 float형 매개변수로 넘어갈때 보면 나는 분명히 실수를 썻는데 파라미터타입매칭이 안맞다라는 에러가 종종뜨는 경우가 있어요 

그 뒤에 식별자를 쓰셔야 한다라는거 일반적으로 더블을 기본적으로 가장 많이 씁니다. 그래서 큰 문제가 되지 않을때는 더블을 쓰시는게 훨씬 편하시겠죠 

그래서 출력을 한번 해보시면 됩니다. 

부동소수점방식에서의 오류라고 말씀을 드렸는데 요거는 눈으로 그냥 말씀을 드릴게요 아직은 for문을 배우지도 않았고 그런데 이런일이 발생할수도 있다. 라는 걸 말씀을 드리겠습니다. 

이게 결국 나타내다 보면 1.mX2의 마이너스n승 요런식으로 많이 표현이된다라고 말씀을 드렸는데 2의마이너스n승 요 부분이 아무리 작은 n승을 넣는다 해도 0을 표현할수 없어요 

0이라는 값을 표현할수 없어요 이부동소수점을 가지고 계속 연산을 하다보면 약간의 오류가 발생할수 있습니다. 그거를 부동소수점의 오류 부동소수점의 사용하면서 발생할수 있는 오차

다른책들도 설명이 되어 있고 항상 애기가 나오게 되는데 여기를 보시면 1이라는 숫자가 있구요 0.1을 만번을 더했어요 그러면 이값을 밑에 결과처럼 요렇게 나와야 되는데 우리가 생각하기

에는 1001만 나와야 되는데 이렇게 더미로 약간의 숫자가 붙어있죠 소수이하자리수의 요만큼의 오류가  발생이 되는겁니다. 이거를 다알지만 이렇게 부동소수점으로 나타내는게 훨씬 많은 범위의 

실수를 나타낼수 있기 때문에 그냥 사용을 하는거거든요 그렇게 이해를 하시면 되고 요런 약간의 오류는 발생할수 있다. 라는거를 여러분도 이해하시면 되겠습니다. 실수를 프로그램에서

어떻게 나타내는지를 보셨구요 크게 차이나는 정수랑 크게 차이나는 부분이  있는거 같지만 사실 우리가 데이터타입만 사용을 하시면 되고 중요한 거는 기억해 두실거는 모든 소수점으로 쓰는 숫자들 

프로그램에서 사용하는 0.1이라는 숫자들도 사실은 어디에 저장이 되어있느냐 double형으로 저장이 되어 있다. 그렇기 때문에 애네들을 만약 내가 float형으로 쓰고 싶다. 뒤에 식별자f를 쓰셔야 된다. 

가끔 오류가나고 그오류에 당황하는 경우가 있기 때문에 말씀을 드렸습니다. 다음강의는 인제 정수봤고 실수 봤고 문자를 어떻게 표현하는지 살펴보도록 하겠습니다. 