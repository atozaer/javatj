아 이번에는 do~while문에 대해서 말씀을 드리도록 하겠습니다. 

while문이 조건을 체크를 하고 정해진 블럭안에 있는 수행문들을 반복을 한다라고 하면 do~while문 같은 경우는 조건을 먼저 체크를 하지 않아요 조건을 먼저 체크를 하지 않고 수행문을 먼저 수행을 먼저 일단 한번 합니다. 

일단 수행문을 먼저 한번 하고 나서 조건 체크를 해요 여기 인제 수도코드를 보시면 do하고 중괄호가 있지요 그래서 요기서 while은 중괄호 들어가기전에 조건체크를 하잖아요 do~while은 조건체크를 하지 않습니다. 

하지 않고 중괄호안에서 수행을 한 다음에 요기 마지막에서 조건체크를 해요 조건체크를 하고 조건이 맞으면 다시 수행을 하는거죠 그래서 언제 쓰시냐면 중괄호안에 부분이 무조건 한번 수행이 되고 나서 조건을 체크할 

일이 있을때 do~while을 씁니다. 무조건 한번 수행이 될 일들이 간혹가다 있긴 하거든요 while하고 for문을 가장 많이 쓰고 do~while은 그렇게 많이 사용하진 않지만 do~while이 유용한 때가 있어요 예제를 보면서 한번

같이 보도록 하겠습니다. 

실습

입력받은 모든 숫자의 합을 구하는데 입력이 0이 아닐때까지만 반복을 하겠다. 

저랑은 while로 한번 만들어보고요 그거를 do~while로 만들어보면서 어떤 차이가 있는지 한번 살펴보도록 하겠습니다. 

우리가 입력을 받을때 Scanner를 사용을 하죠 Scanner scanner = new Scanner(System.in)표준입출력에서 받아라  이렇게 한다음에 이제 값을 하나씩 받아가지고 그걸 다 더할거니까 입력받는 변수를 하나 선언을 하겠습니다.

그래서 int input;이라고 할까요 선언을 해놓고 그다음에 값을 다 더할 거잖아요 그래서 sum;이라는 변수를 하나 선언을 했습니다. 받으면 일단 while로 만들어볼게요 일단 받아요 input = scanner스캐너nextInt이렇게 

받죠 while 들어가기 전에  물어보죠 input이 !=0 이냐 요렇게 물어봐서 while(input !=0)  input이 0이면 아예수행할 필요도 없죠 수행할 필요도 없으니까 아예 스킵할거고 만약에 0이 아니면 sum += input이렇게 

덜어줄거구요 다시 입력을 받겠죠 input = scanner.nextInt();요렇게 입력을 받아서 0이 아닌지 sum은 계속 더할 거니까 초기값을 int sum=0;을 해줘야 할겁니다. 이렇게 계속 수행을 할거에요 그러고 나서 만약에 

0이 들어갔으면 반복문이 끝날테니까 sum을 반복문 바깥에서 출력을 한번 해보지요 run을 해보시면 기다리고 있죠 12345 0 엔터를 치면 15 1부터 15까지 더하면 15라는게 찍힐 겁니다. 이걸 do~while문으로 

만들어볼까요 do~while로 만들면 일단 입력을 한번 받는데  입력을 받는 부분이 while문 위에도 있고 while문 안에도 있고 두군데 있잖아요 do~while로 만드시게 되면 do~while하고 조건문에 input!=0 끝에다가

;세미콜론을 하시면 되고 그다음에 while문 위에 있는 입력문은 필요가 없죠 삭제를 하고 while문안에서 입력을 먼저 받겠죠 요렇게 입력을 받아서 sum += input을 sum을 더해요 sum에다가 0을 더하는거는 

아무의미가 없잖아요 그래서 더해주고 input이 0인지를 한번 판단을 해서 0이면 그만둬라 여런경우에는 do~while로 쓰는게 더 깔끔해요 그죠 일단은 수행문을 한번 수행을 하고 그리고 나서 조건체크를 

하는 input을 한번 받아본다라든가 어떤 값을 일단 받고나서 그 값에 어떤 영향에 의해서 수행이 된다. 이런거 할때는 이렇게 do~while로 쓰시는게 유용할수 있습니다. run해보시면 당연히 처음부터 0을 

넣으면 합계 0이 출력이 될거구요  그다음에 아까처럼 123450넣으면 15이렇게 나요죠 그래서 while하고 do~while하고 이렇게 다른면이 있다. 다르게 사용할수있다. 라는거를 학습해 봤습니다. 





