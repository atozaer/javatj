조건이 여러개일때 if~else문을 봤는데요 그걸 좀더 간단하게 표현할수 있는 switch~case문을 살펴보도록 하겠습니다. 

switch~case문 같은 경우에는요 if~else if를 좀더 간단하게 표현할 수가 있는데 이때 비교되는 조건이 if~else if는 ( )괄호안에 조건식이 들어갈수 있어요 조건에 대한 복잡한 비교연산자 뭐 이런것들이 들어가서 

조건에 대해서 복잡한 식이 들어가는 경우도 있거든요 그럴수도 있지만 스위치 case문을 쓸때는 거기에 식은 안들어갑니다. 식은 안들어가고요 단일 어떤 숫자나 이경우에 비교되는 조건에 해당되는 매치되는 

조건에 대한 값 그조건이 특정 값으로 표현이 될수 있을때 아니면 문자열로 표현이 될수 있을때 요럴때 많이 사용을 합니다. 좀더 구문이 깔끔해 보여서 사용하실수가 있구요 그 다음에 지금은 이제 자바가 

많이 업그레이드가 됐는데 자바 14부터 좀더 간결해진 표현식이 switch~case문에서 식으로 제공이 되고 있습니다. 요것도 같이 살펴보도록 하겠습니다. 음 사용하시는 방법은 우리가 예제를 같이 보면서 제가 

설명을 드리도록 할게요 

실습 

package 생성하기 kr.or.kh16

클래스생성하기 SwitchCaseTest ->main생성하기

Scanner scanner = new Scanner(System.in); 에러가 나는데 import가 안되서 그래요 ctrl+shift+o하면 자동으로 임포트가 되요 우리가 int month = scanner로 달을 받을거죠 nextInt() 몇달 몇월 이렇게 

받을거구요 월은 간단하게 1월2월3월4월 숫자로 나타낼수 있잖아요 if해서 이게 몇월이면 이렇게 할수도 있지만 switch~case로 해볼게요 switch(month )는 괄호에다가 너가 비교할게 뭐냐 월로 가서 

분기를 하겠다. case 해서 1월이면 1:이렇게 하는데 case를 안으로 넣으시면 좋겠습니다. 위에서 day를 하나선언할게요 day = 31로 주겠다. 이렇게 해요 이렇게 주구요 2월 3월 4월 다나올거 아니에요 

이 switch~case문을 빠져나가게 하기 위해서 break를 쓰셔야 해요 이거 안쓰시면 계속 밑에도 체크합니다. 밑에도 계속 체크하니까 브레이크를 쓰셔야 switch~case문을 빠져나가게 되요 여기다 계속 

작업을 해볼게요 앞으로는 프로그램 점점 복잡해지기 때문에 가독성이 굉장히 중요합니다. 코딩하실때 항상 신경쓰셔서 들여쓰기를 잘해주세요 여기도 역시 default를 쓰셔도 되고 안쓰셔도 상관이 없어요 

default마지막 조건이죠 이도저도 아니다 라고 하면 사실 이거는 우리는 이런 달은 없죠 그래서 여기에다가 존재하지 않는 달입니다. day=-1에러죠 이렇게 줄수 있습니다. 문장이 2개라도 switch case문

안에서는 중괄호{ }를쓰질 않습니다. 나중에 자바 14에서는 쓸일이 있어요 쓸일이 있는데 이런식으로 switch~case문을 원래쓰던 방식대로 쓴다라고 하면 옆에다 써도 상관없어요 보기좋게 밑으로 내리는거구요

이런 case문이 쭉 늘어져 있을때 case문안에서는 중괄호를 쓰질않아요 쓰질않고 여기는 콜론을 써서 문장이 많더라도 쭉 쓰시면 됩니다. 그리고 나서 switch~case 문이 다 끝나고 나면 몇월은 몇일입니다. 출력

실행해보시면요 10월을 입력하면 31일입니다. ctrl+m누르시면 돼요 그럼 이걸 줄여볼게요 너무 기니까 같은 결과를 가진 조건들이 있어요 31일이 여러개가 있죠 case 1: 옆에다 계속 쓰시면 돼요 31일인게 1월

3월 5월 7월 8월 10월 12월이죠 나머지 케이스는 지워주면 돼죠 break를 안쓰면 안된다고 말씀을 드렸죠 break를 주석처리하면 10월 입력하면 28일로 나와요 2월조건을 수행하고 break를 만나서 나와요 

맞아도 case가 바로 끝나는게아니라 break를 반드시 써주셔야 해요 10월 입력하면 31일입니다. 나오죠 여기까지가 전통적으로 쓰던 switch~case문입니다. 조건에 숫자 문자만 비교만 됐지 문자열은 사실 

안됐어요 문자열을 비교를 할래면 스트링 컴패어를 비교를 했어야 되는데 if문을 쓰던가 이제 문자열도 지원이 됩니다. 문자열예제는 보기만 할게요 문자열이죠 문자가 아니고 작은따옴표랑 큰따옴표의 

차이를 문자말씀드릴때 했었고 문자열도 비교가 되서 스위치케이스로 쓸수 있다 라는거 알아두시면 될것 같구요 마지막으로 스위치케이스가 구문이었는데 식으로 제공이 되고 있어요 자바 14부터 

아주 간편해 졌습니다. 우리가 필드에서 일을 하다 보면 버전이 업댓다고 하면 바로 적용하지는 않거든요 그전에 이전부터 10이나 11버전으로 돌아가고 있는 시스템이 있다면 바로 업그레이드를 하지는 

않습니다. 그래도 언젠가는 쓰일것이고 간단한 표현방법이기 때문에 여러분들이 최근버전이죠 알아두시고 쓰실일이 있을때 쓰시면 요버전으로 시스템이 개발된다하시면 쓰실수 있는 거죠 

일단은 모든 case문을 case를 한번만 쓰고 쉼표로 구분할수 있게끔 만들었습니다. 어떤 동일 조건이 있다라고 하면 요전에 코딩했을 때는 이렇게 case 를 연속으로 붙여서 섰는데 이렇게 쓰지않고 

쉼표로 써요 case 한번쓰고요 1,3,5,7,8,10,12를 요렇게 쓰게 됩니다. 요렇게 쓸수가 있구요 그다음에 또 중요한게 뭐냐면 이게 식으로 되기 때문에 값이 반환받을수가 있어요 우리가 그전에 스위치케이스를 

섰다라고 하면 거기서 값을 반환시켜주지는 않았습니다. 그런데 요기 보시다시피 day를 switch해서 리턴값을 받을수가 있어요 요렇게 쓸수가 있구요 요게 굉장히 큰 차이가 되겠죠 또하나는 case 끝에 화살표

가 들어가 있는데 화살표를 자바에서 쓰죠 람다식에도 쓰고 들어가게 되는데 이 화살표안에 문장이 여러개인경우 중괄호를 쓰구요 break문을 쓰질 않습니다. break문을 안쓰고 많이 바꿨죠 요게 수행이 되고 

어떤 수행문도 쓰고 반환값도 주고 싶다. 라고 했을때 나중에 메서드를 보시면 대부분 반환이 일어난다 그러면 리턴을 써요 반환해준다는 의미로 리턴을 쓰는데 switch~case문에서 반환값을 쓰실때는 yield(일드)

라는 키워드를 쓰시게 돼 있어요 그래서 요렇게 만들수가 있는데 요거를 요전에 만들었던 코딩했던 그거를 수정을 해가면서 하나하나 살펴보도록 하겠습니다. 자 여기를 보시면 요전에 만들었던 코드죠 코드데

보시다시피 project에 자바 se15버전으로 돼 있어요 이클립스 플러그인으로 같이 설치가 돼서 돌아가고 있는 버전이15버전이기 때문에 요렇게 사용할수가 있고 쉼표로 쓰실수 있다고 말씀을 드렸죠 

case 코드를 ,마로 수정합니다. 그리고 화살표를 쓰시면 돼요 화살표를 쓰신다음에 case 2 case4,6,9,11로 14버전으로 수정후 default->로 수정한다음에 문장이 두개인 경우는 { }를쓰세요 실행해 볼까요 

run해 보시면 입력을 받게 해놨기 때문에 기다리고 있죠 10입력후 10월은 31일입니다. 출력됩니다. 저번하고 똑같이 나오죠 switch~case 일반적으로 썼을때랑 다시 실행해서 2월입력하면 2월은 28일입니다. 

잘나오구요 그런데 보시면 값을 반환받을수 있다고 말씀을 드렸죠 day=31로 쓸수도 있지만 day를 받는거에요 switch~case에서 int day= 자 이렇게 받을수 있으면 요기다가 이렇게 쓰는거에요 

조건 밑에 day는 삭제하고 31, 28, 30 으로 쓰는거에요 근데 이때는 수행하는거랑 반환값이 같이 들어가는 거잖아요 근데 요때는 그 반환의 의미로 yield(일드)를 쓰셔야 돼 그래야 이값이 반환값이 돼요 

수행하는 부분하고 반환하는 부분을 같이 할수는 없구요 수행하는 부분을 두고 반환하는 값이 따로 있다. 반환을 해줘야하잖아요 그때쓰는 키워드가 yield(일드)입니다. 그리고 여기에 구조끝에 빨간줄이 

나오냐면 int day가 값을 받잖아요 문장의 끝이 여기다라는 의미로 };를 이렇게 해주셔야 해요 조금 복잡하지만 어떻게 보면 익숙해 지면 이게 훨씬 편하실수 있거든요 자 요렇게 되어 있습니다.

결국 run을 해보면 10입력하면 10월은 31일 입니다. 이렇게 나요죠 case 밑에 31일을 day에 줘라 28을 day에줘라 30을 day에 줘라 라고 하면 그대로 쓰시면 되고 그렇지 않고 다른 수행문이 있는 경우에는 

yield일드를 쓰시면 돼요 ->뒤에다가 더쓰고 싶다. { }를 하시면 돼요 그다음에 이번달은 31까지 입니다. 출력문을 넣고 그러면 31일 오류가 나오잖아요 근데 애가 반환값이다 yield 31;을 써주시면 됩니다. 

run을 해보시면 10월입력하면 이번달은 31일까지입니다. 10월은 31일 입니다. 까지 출력됩니다. case안에 있는 출력문도 나오고 yield값도 나오고 맨밑에 출력문도 나옵니다. 다른달을 해도 마찬가지구요 

13월을 입력하면 존재하지 않는 달입니다. 13월은 -1입니다. 요렇게 나오죠 switch~case는 default라는걸 쓰시게 된다. 좀더 간결하게 표현하기 위해서 switch~case가 식으로 표현할수가 있고 반환을 해줄수가 

있다. 이게 자바 14에서 제공되는 스위치케이스문입니다. 여기까지 해서 조건문을 다 알아봤구요 다음시간에 제어문의 또다른 중요한문이죠 반복문에 대해서 같이 알아보도록 하겠습니다. 
