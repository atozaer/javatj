자료형을 데이터타입이라고 한다고 했구요 

정수부터 어떻게 표현하는지 보도록 하겠습니다. 자료형이 크게 두가지가 있어요 지금 애기하는 기본자료형

프리미티브 데이터타입 자바에서 제공해주는 자료형인데 어떻게 보면 C부터 쭉 넘어온 자료형들이죠 이 자료형

들이 특징은 뭐냐면 바이트다 인트다 케랙터다 하면 너는 몇바이트짜리다 라는게 정해져 있습니다. 크기가 정해져 있구요 

new 해서 쓰지 않아요  그런데 나중에 우리가 다시볼  참조자료형이란게 있습니다. 그거는 객체를 만들고 그객체가 데이터타입으로 쓰이는 거에요

그때는 new라는 걸 해서 써야 되거든요 그거는 몇바이트짜리다 정해져 있는 자료형은 아니다. 그래서 크게 두가지로 볼수 있는데 우리가 객체를 

안배웠잖아요 클래스를 그래서 기본 자료형부터 설명을 드리도록 하겠습니다. 일단 정수라는게 어떻게 표현하느냐 보면 정수는 크게 4개의 자료형이 있습니다. 

문자를 표현하게 되는데 문자는 char자료형으로 표현하게 됩니다. 실수는 정수랑 달라요 정수는 딱딱 떨어져요  0부터 양수음수 이렇게 표현하게 되는데 실수는 0부터 1사이에 

무한대의 실수가 있습니다. 그 모든실수를 정수랑 같은 방식으로 표현할수가 없어요 실수는 표현하는 방식은 따로 있습니다. 그래서 실수자료형이 따로 있는

거구요 그래서 같은 4바이트라고 해도 인트로 선언을 했느냐 플로트로 선언을 했느냐가 달라요 인트로 선언을 하면 정수값이 들어가는 자료형으로 메모리가 잡히는거고

플로트로 선언을 하면 실수를 표현할수 있는 비트수가 잡히는 겁니다. 4바이트인데 여기는 지수부, 여기는 가수부 이렇게 해서 잡히는 거거든요 같은 4바이트지만 

정수가 숫자라도 정수랑 실수를 표현하는건 다르다.  논리형 boolean언이있죠 true,false만 제공하면 되니까 1바이트면 충분합니다. 이렇게 제공이 되구요 

정수자료형의 크기랑 수의 표현범위를 보시면 바이트는 1바이트 쇼트는 2바이트 인티져는 4바이트 제일 많이 쓴다고 말씀을 드렸고 롱은 8바이트인데 저번시간에 말씀을 드렸죠

어떤 비트가 n비트면 비트가 있는데 3비트다 라고 하면 3비트로 표현할수 있는 수의 범위는 0~7까지 2의3승의 -1까지잖아요 요렇게 8개를 표현할수 있는거죠 2의3승개 0부터

시작했으니까 -1이 들어가는거에요 요렇게 표현이 될수도 있고 나머지들도 마찬가지에요 정수일때는 뭐가 바뀌냐면 지난시간에 말씀드렸듯이 맨앞에 비트가 부호비트에요 

나머지 하나를 뺀 나머지비트수 n-1개의 비트수를 표현을 할수가 있습니다. 그래가지고 한바이트다 하면 2의8승개 표현을 하고 양수만 표현한다고하면 0부터 2의8승이 256이죠

이게 부호가 있으니까 양수음수 다표현을 해야 되잖아요 2의7승 2의7승-1까지  이걸숫자로 표현하면 -128부터127까지 요렇게 표현이 되겠네 2바이트면 16비트데 2의 15승부터

2의15승-1까지 표현된다. 4바이트면 32비트 한비트부호비트빼면 -2의31승부터 마이너스플러스 2의 31승-1까지 롱이면 8바이트 64비트죠 요렇게 표현을 할수 있습니다. 

맨앞의 부호비트들어가고요 10을 인트로 표현을 할때 어떻게 표현이 되느냐 맨앞에 부호비트들어가고요 0쭉 들어간다음에 2의 3승자리죠 2의1승자리죠 둘을 합치면 10이 된다. 

요렇게 표현이 된다. 이거를 각 데이터타입이 있는데 언제 쓰는지 바이트 쇼트 두가지가 있는데 바이트는 사실 바이트단위의 데이터를 핸들링할때 써요 음악이라든가 동영상이라든가 

실행파일 이런것들 바이트단위로 쭉 연결이 돼 있거든요 인풋아웃풋 실행할때 입출력처리할 때 데이터받아서 처리할때 이럴때 바이트를 씁니다. 숏트는 자바언어에서 많이 쓰지는 않습니다. 

두바이트자료형이구요 씨나 씨뿔뿔 쓰였으면 라이브러리 상에서 호환할일들이 있어요 그럴대 숏트를 쓰게 됩니다. 인티져를 가장 많이 쓴다고 말씀을 드렸구요 자바에서 사용하는 정수에 대한 

기본 자료형이 인트가 됩니다. 4바이트자료형이고 이거를 잘생각하셔야 하는데 리터럴이라는 애가 나왔는데 다음에 상수와 리터럴을 조금더 말씀드리기를 할거에요 근데 여기서 한번 보시면 

int num = 10;  num은 4바이트자리를 잡아라 하는 거고 4바이트메모리가 잡히면 공간의 이름을 num이라고 해라 이런의미에요 이 메모리가 네바이트고 num이라고 하면 공간을 가르친다. 

이게 변수의 의미라고 말씀을 드렸는데 그럼 이 10이라는 값이 공간에 들어갈건데 이 10은 어디서 왔느냐 라는거에요 이 10이라는 애를 뭐라고 그러냐면 리터럴이라고합니다. 

그래서 프로그램안에서 쓰는 숫자 문자 문자열 이런것들을 리터럴이라는 표현을 쓰는데 메모리 어딘가 10이 있어야 겠죠 그래야지 그값을 가져다가 num이라는 공간에 집어넣을거 아니에요 

그러면 이 10이라는 숫자 이숫자 이숫자는 몇바이트로 잡히냐는 거에요 요게 4바이트로 잡힌다 라는 말씀입니다. 무조건 100을 쓰던 1000을 쓰던 우리가 프로그램안에서 정수를 쓰게 되잖아요 

그정수는 무조건 4바이트짜리로 잡혀요 요거를 여러분이 이해를 해두시면 좋을것 같아요 10 어디서 딴데서 나와서 딱들어가는게 아니라 10이라는 숫자가 어디가  잡혀 있어요 10이라는 값을 

가지고 있고 이 값이 num이라는 공간에 복사가 되는게 마찬가지에요 이메모리의 위치에 이 10은 어떻게 잡혀 있느냐 4바이트에요 롱이라는건 8바이트에요 그래서 긴 숫자를 쓰실때 

긴정수를 쓰실때 쓰시면 되고 예제가 여기에 나와 있는데 요거에 대해서 설명을 드리고 함께 프로그램을 해보도록 하겠습니다. 요기보시면 인트 넘에서 12345678900 굉장히 큰수를 넣었어요 

이게 오류가 나는 이유가 뭐냐면 num이라는 애는 4바이트데 이숫자가 표현할수 있는 범위가 num이 표현할수 있는 범위를 넘어선거에요 인티져가 표현할수 있는 범위를 넘어서는 숫자를 

대입하게 되면 에러가 납니다. 오류가 납니다.  이때는 오류가 난거구요 그러면 8바이트로 선언해 롱이라고 선언을 하고 lnum에다가 넎어봤어요 그랬더니 또 오류가 났어요 어 이거는 

왜 오류가 났을까요 이건 왜 오류가 났냐면 숫자 리터럴 자체가 항상 뭘로 잡히냐면 아까 말씀드렸듯이 4바이트로 잡혀요 역시 애도 4바이트안에  들어갈수 숫자가 아니에요 

그런데 내가 애를 선언을 해버렸잖아요 그래서 오류가 난겁니다. 그래서 이렇게 큰숫자를 선언을 할때에는 뒤에다가 애는 롱형으로 잡아라 기본적으로 항상 너네가항상 인티져로 숫자를 잡는데 

이게 대문자를 쓰셔도 되고 소문자로 쓰셔도 돼는데 근데 소문자로 쓰시면 1하고 햇깔립니다. 그래서 대문자로 많이 씁니다. 요렇게 쓰면 애는 4바이트로 잡히는게 8바이트짜리로 잡히게 되고 

그숫자가 엘넘버에 들어가게 됩니다. 우리가 정수를 표현할수있는 여러가지 자료형이 있는데 바이트 인트 숏트 롱 여러가지가 있죠 여러가지가 있는데 이크기가 다 있어요 이크기가 넘어가는 

숫자를  쓰시게 되면 오류가 납니다. 가장 큰 롱을 쓸때는 해당되는 숫자 맨뒤에 애는 롱으로 처리해라 라는 알파벳(L)을 넣어주어야 합니다.  이게 우리가 나중에 실수를 배우실건데요 실수를 

보시면 무조건 실수를 뭘로 잡냐면 무조건 더블로 잡습니다. 3.14라는 값을 썻어요 3.14가 어느방에 잡히냐 더블형의 크기의 실수로 잡힌다는거죠 더블말고 float라는 자료형도 있습니다. 

이건 4바이트에요 더블은 8바이트고 그래서 내가 이거를 나는 플로트로 선언하고 싶다. 뒤에다가 f를 쓰셔야 됩니다. 이거도 대소문자를 햇갈리지 않으니까  어떤걸 쓰셔도 상관은 없습니다. 

그런데 엘 같은 경우는 대문자를 쓰시고요 실수는 자바에서 미리 말씀을 드리면 정수는 무조건 인티져 4바이트로 잡히고 실수 숫자를 쓰시게 되면 이 리터럴은 더블형으로 잡힌다. 라는 거 

미리 알아두시면 되겠습니다. 

실습

이클립스를 키시구요 ->kr.or.kh06패키지를 만드시고 ->클래스이름VariableTest main함수작성->

아까 바이트타입이라고 한번 봤잖아요 byte bnum = -128; 넣었을때 오류가 안났죠 bnum을 출력해 보시면 -128출력이 나옵니다. 

+128하면 오류가 납니다. 이게 바이트가 아니니까 인트로 해라는 거죠 127까지 표현할수가 있습니다. 

인트 num 해서 12345678900 표현을 하게 되면 이숫자가 요기서 표현을 하게되면 아웃오브레인지 니가 쓴 지금 리터럴이 num에 들어가기엔 크다 

그러면 12345678900은 너무 크니까 이거는 안되고 그러면 내가 이번에 여기에 롱이라고 한번 해보자 long lNum = 12345678900; 선언을 했어여

그래도 오류가 난다는거죠 그래서 다시 가보면 이것도 리터럴이 아웃오브레인지다 리터럴이 너무크다 이때 여기에 L을 써준다. 소문자는 숫자1과 햇갈린다. 

롱타입을 쓰실때 작으면 상관없어요 인티져에서 롱타입으로 형변환이 되는 겁니다. 작은수로 큰수로 바껴요 4바이트짜리가 8바이트짜리 공간으로 들어가는건 아무 문제 없습니다. 

그래서 이때는 문제가 없는데 더큰수 이수자체가 4바이트에 들어갈수가 없으니까 이수를 8바이트에 넣어라 이거죠  



 



















 