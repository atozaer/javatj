오늘부터 여러분과 자바프로그래밍 공부할 윤종혁강사라고 합니다. 

여러분들에게 좀더 자바를 이해하기 쉽고 앞으로 여러분들이 자바를 공부해야 할때 꼭 알아야 하는 개념을  확실하고 쉽게 이해할수 있도록 도와드리겠습니다. 

이 자바를 이용해서 뭔가를 만들수 있고 문제를 해결할수 있고 그렇게 되기를 저도 원하고 학습의 목표가 되도록 저도 많이 도와드리도록 하겠습니다.

먼저 자바전체를 살펴보죠  
1. 자바 기초 
2. 객체지향 입문 
3. 객체지향핵심 
4. 자바의 유용한 클레스들 
5. 자바와자료구조 
6. 자바의 다양한 기능들

1장 자바의 문법 
다른언어를 공부를 할때에도 모든 내용의 공통사항입니다 다른언어를 공부할때 유리합니다.  
2장 객체지향프로그래밍을 어떻게 할것이냐 여기서는 이론적인 부분을 많이 말씀드린다면  
3장에서는 이것을 활용해서 어떻게 객체지향 프로그램을 구현되는지 활용이 되는지 말씀을 드릴겁니다. 
4장에서 자바를 사용하게 되면 객체지향프로그램을 배우지만 자바에서 제공되는 여러 유용한 클레스들이 있어요
프로그램을 하기 위해서는 내가 모든 기능들을 다 만드는게 아니라 이미 제공되는 기능들을 다 만드는게 아니라 이미 제공되는 기능들을 사용할 필요가 있죠. 
이강의에서 자료구조를 같이 이야기를 할거에요 자바를 배우는거랑 자료구조랑 무슨상관이야
라고 생각을 하실수도 있는데 실무에서 가장 많이 쓰는 과목중의 하나가 자료구조입니다.  자료구조를 어떻게 잘 활용하느냐에 따라서 프로그램의 퀄리티가 확 올라갈수
있는거거든요 자바 자체에 많은 컬렉션 프레임워크가 제공이 되고 있어요 자료구조가 구현되어 있는것이 제공되고 있는데 그 자료구조를 실제적으로 우리가 구현해 보면서 
그 내부가 어떻게 구현이 되어 있는지 이런 것들을 살펴볼수가 있습니다. 마지막으로 자바의 다양한 기능들을 쭉 다시 확인을 하고 정리합니다. 

1장 자바기초를 보겠습니다. 
1장에서 21장으로 구성되어 있습니다. 프로그램이 뭔지에 대해서 애기를 해 볼게요 프로그램을 짠다 프로그램을 구현한다. 
시스템을 만든다 라고 하는데 프로그램은 프로그램언어를 이용해서 컴퓨터가 일을 하도록 시키는 겁니다. 
컴퓨터에게 말로 너 여기서부터 여기까지 총점을 구해봐 이렇게 이야기를 하면 컴퓨터가 못알아듣잖아요?
우리는 프로그래밍언어를 이용해서 컴퓨터가 일을 할수록 만드는게 프로그래밍이에요.
이런것들을 프로그램을 뭐라고 하냐면 명령어 집합 그렇게 프로그램을 하게 되면 만들어진 프로그램을 사실 사람이 만든거기 때문에 기계가 이해할수는 없습니다. 
기계가 이해하도록 변형해 주는 바꾸어주는거죠 그거를 뭐라고 하냐면 컴파일한다 라고 이야기를 하고 그런 바꾸어주는 역할을 하는 소프트웨어를 우리가 컴파일러라고 합니다. 
자바도 자바언어에 컴파일러가 있는거고 C도 C언어의 컴파일러가 있는 거죠 모든 프로그래밍 언어가 있다고 하면 그에 맞는 컴파일러가 있게 됩니다.   
자바의 역사를 살펴보시면요 자바가 1991년 약 20년됐죠 제임스 고슬링이라는분이 회사의 SUN이라는 회사에 팀에서 어떤 소프트웨어를 만들려고 했냐면요 
휴대용장치나 가전제품 이런데 들어가는 소프트웨어를 만들려고 했어요 그때까지 많이 쓴언어가 C하고 C++이었거든요 
C,C++은 굉장히 좋은 언어이긴한데 위험성이 많이 있어요 포인터라는 것으로 메모리를 핸들링을 하기 때문에 시스템이 다운되는 확률이 굉장히 높습니다. 
물론 아주 잘 짜면 다운이 안되겠지만 안정성이라는 부분에서 불안한 부분이 있었거든요 가령 뭐 여러분이 생각하실때 냉장고에다가 소프트웨어가 탑재되죠 
냉장고가 다운이 된다면 큰일나죠 그래서 이사람들이 생각하기에 좀더 안정적인 언어가 없을까 라고 고민했는데 개발한 언어가 자바가 되겠습니다. 
처음에 자바가 그렇게 나왔구요 자바는 앞으로 제가 자바언어를 말씀드리면서 계속 이야기를 하겠지만 굉장히 안정적인 언어입니다. 
안정적인 언어라는 것은 왠만하면 죽지 않아요 다운시키기가 오히려 더 어려울수도 있습니다. 
기존에 C언어나 C++가지고 있던 여러가지 모호함이라든지 불안한 요소들을 과감히 다 없애버렸어요 
안정적인 언어다 또하나의 특징은 플렛폼의 영향을 받지 않는다고 하는데 여기서말하는 플렛폼은 운영체제라고 생각하시면 돼요 
우리가 가령 C언어로 코딩했다고 했을때 .c라는 파일을 만들어요 그리고 컴파일을 하게 되는데 윈도우에서 컴파일을 했느냐 리눅스에서 컴파일을 했느냐 에 따라서 실행파일이 따로 만들어집니다. 
이애기는 무슨애기냐면 윈도우에서 실행한 실행파일 exe가 있다는거죠 그 실행파일을 리눅스에서 그대로 쓸수가 없어요 
만약에 필요하다라고 하면 그 C소스를 가져와서 리눅스에서 다시 컴파일해서 써야 합니다. 
이런 이유는 각 운영체제마다 실행파일이 갖고 있는 실행파일 코드가 틀려요 그렇기 때문에 한번 컴파일했다고 해서 다른 운영체제에서 쓸수있는 것은 아닌거죠
자바같은 경우는 컴파일하게 되면 .class라는 파일이 생겨요 완전한 샐행파일은 아닙니다. 이게 어떻게 실행이 되려면 JVM자바가상머신을 설치를 합니다. 
이따가 설치를 할때도 다음강의에서 설치를 할건데 윈도우용가상머신과 리눅스용가상머신이 따로있어요 
내가 윈도우를 쓴다하면 JVM의 윈도우를 깔아야 되고 리눅스를 쓴다 JVM리눅스를 깔아야 됩니다. 그려면 바이트코드가 이 가상머신위에서 실행이 되는거에요 
실제로 시스템이 윈도우냐 리눅스냐 맥이냐 OS와는 상관없이 가상머신만 있다라고 하면 .class라는 실행파일이 실행이 되게 됩니다. 
처음에 자바가 나왔을때 JVM을 거쳐서 실행하는 것보다는 직접 컴파일 된 실행파일에 비해서 실행속도가 훨씬 느려지겠죠  
자바가 초기에서는 속도가 느렸습니다. 못쓴다. 막 이런이야기도 있었는데 지금은 속도가 굉장히 빨라졌어요 자바자체속도도 빨라졌고 하드웨어 성능이 굉장히 좋아졌죠 
지금은 성능에 대한 이슈는 없다고 생각하시면 됩니다. 그래서 자바언어라는것은 다른언어와 다르게 O/S에 독립적이다. 그리고  자바는 객체지향언어입니다. 
이거에 대한 이야기는 차차 할거에요 객체지향의 특징중에 하나가  유지보수가 쉽고 확장성이 좋다라는 특징이 있거든요
자바언어가 그런언어다. 안정적이라는건 말씀을 드렸고 자바는 오픈소스데 그래서 자바 JDK제공이 돼요 자바에서 제공되는 라이브러리들도 많습니다.  
그것을 사용을 해서 좀더 쉽고 효율적인 프로그램을 하실수도 있구요 또 하나는 자바와 연동되는 오픈소스들이 있어요 
굉장히 좋은 프레임워크들도 있고 프로그램들도 있고 자바가 그런 장점을 가지고 있는 언어다. 
객체지향 프로그램이 뭐냐  프로그램의 구현을 시간의 흐름이 아닌 객체간의 협력을 기반으로 프로그램 하는것 
우리가 프로그램이 크게 봐서 두가지 프로그램을 생각을 해보면 
내가 아침에 일어나서-> 밥을먹고-> 싰고->학교를 간다. 
시간의 흐름순으로 우리가 프로그램을 하는것들이 있습니다. 이걸 우리가 절차지향언어라고 해요 대표적인 언어가 C언어라고 할수가 있죠
그다음에 우리가 말하는 객체지향언어라는 것은 뭐냐면 가령 홈쇼핑에서 우리가 물건을 주문한다. 했을때 홈쇼핑에서 회원객체가 있겠죠  
이회원이 어떤 상품객체를 보고 주문객체를 하면 어떤 택배객체회사의 주문시스템과 연동이 돼야 될겁니다. 
요런것들이 객체에요  내가회원이고 내가 어떤 상품을 주문을 하고 상품을 선택을 해서 이게 주문이 되고 그게 이게 다시 배송이 돼서 나에게 오겠죠 
각 객체간의 협력으로 이루어지는 이런프로그램을 객체지향언어라고 할수 있겠죠 지금 말씀드리면 이해가 안될수도 있지만 나중에 여러가지 프로그램 코딩을 하면서 이해하시면 되구요
웹사이트쇼핑몰에서주문을 하면 주문번호 하나가 딱 뜨잖아요 오더인거죠 요런식으로 생성이 되는 거에요 회원가입을 하면 한명의 회원으로 등록이 돼는 거죠 
C언어랑은 좀 다르죠 시간의 흐름순으로 이해하기는 C언어가 좀더 쉽습니다. 근데 OOP가 훨씬 실생활을 반영한 프로그램이다. 이런말들을 합니다. 자바로 프로그램하면 좋은 이유인거죠
재사용성, 유지보수, 코드관리, 신뢰성높은 프로그램 객체지향으로 프로그램을 하면 이게 왜 좋은지는 많이 와닿지는 않을 거에요 
자바나 C++, C#, Python 등 그런언어들이 객체지향으로 구현되어 있어요 왜 좋은지는 조금더 코딩을 하면서 이해하실수 있을거다. 
자바로 뭐를 할수 있느냐 자바가 제일 많이 쓰이는 부분이 웹서버입니다. SPRING이나 이런것들하고 같이 많이 사용하고 있구요 
뭘 배울거냐 보시면 자바언어 문법 자바언어가어떻게 생겼는지, JDK가뭔지 객체지향이 뭔지 기본적으로 저하고 같이 공부하면서 익히시고 익히고 나면 언어를 배우는 이유는 뭡니까? 
실제적으로 프로그램을 하고 주어진 문제를 해결하고 시스템을 개발하기 위해서 배우는 거잖아요 
그런것들을 좀더 익숙하게 하기 위해서 자료구조라든가 알고리즘이라든가 문제해결을 하도록 하겠습니다. 
일단은 이강의 내용처럼 처음에 공부를 하시고 완성을 하시고 같이 하시면 좋은 결과를 맺을수 있을것이라고 생각을 합니다. 
아까 말씀드린것중에 용어를 정리를 해드리면 자바에서 개발하기 위해서 제공되는 라이브러리를 JDK라고 하고요 
아까 말씀드렸던 자바의 클레스 파일이 돌아가는 JVM라고하는데 JVM돌아가기위해서 설치하는 프로그램을 JRE라고 해요 RunTimeEnviroment라고 해서 JRE를 깔면 JVM이 설치되어 있다. 
라고 이야기할수 있습니다. 
여기까지 말씀을 드리고요 실제적으로 지금이야기한거는 자바가 어떤건지 뭘 배울것인지를 말씀을 드린거고 다음강의에서 직접자바와 이클립스를 설치하고 예제 프로그램을 하나 만들어보면서 실행을 해보도록 하겠습니다. 

 










 

 

