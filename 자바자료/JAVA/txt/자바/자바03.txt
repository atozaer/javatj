네 간단하게 첫 프로그램을 만들어 보도록 하겠습니다. 

항상 모든 프로그램의 시작은 Hello World라고 하거든요 Hello World만들줄 알면 절반은 배웠다라고 이야기를 하는데 

간단하게 Hello World 프린트하는 거 해보도록 하죠 요전 강의에서 말씀드렸듯이 Workspace라고 설정을 해주시는게 

좋아요 그래서 일을 할 공간을 직접 설정을 해주시구요 이클립스가 실행이 돼죠 처음에 어떻게 하시면 되냐면 이클립스 안써보신 분들을 위해서 

잠깐 말씀을 드리면 왼쪽은 이제 우리가 사용하고 프로젝트에 대한 전체 소스들이 어떻게 구성되어 있냐 그걸 볼수 있는 

공간입니다. CREATE A java Project를 구성하시고 거기에다가 코딩을 하시면 돼요 이렇게 되어 있구요 왼쪽에 Package Explorer를 

종료(x)버튼을 눌러서 사라지면 당황하십니다. 당황하지 마시구요 Show-View->Package Explorer를 선택하시면 돼요 그러면 다시 나타납니다. 

가끔 이거 질문하시는 분들이 있거든요 그리고 가운데 화면은 자바 코딩을 하기 위한 전체적인 화면이구요 오른쪽 끝에 Java아이콘 

옆에 퍼스펙티브 화면을 누르면 (아이콘)여러화면의 상태를 바꿀수 있어요 ->Debug(디버깅)을 누르면 ->디버깅화면으로도 바뀝니다. 

(전체구성이 바뀌죠) 이것도 다시 돌아가기 위해서는 오른쪽 끝에 아이콘을 누르면 아이콘화면에서 java(Default)를 선택하면 원래대로 돌아갑니다. 

요렇게 이제 전체화면을 구성되어 있고, 그러면 왼쪽에서 CREATE A JAVA PROJECT를 눌러서 Chapter1이라고 프로젝트이름을 만들고요 

이클립스깔면서 같이 깔았잖아요 자바가 같이 깔면서 런치가 되면서 자바가 그대로 런치가 되서 사용이 되고 있습니다. 자바가 어떤 놈이냐 

링크(Config Jre)클릭해서 jre가 플러그인으로 들어가 있다. 인스톨되어 있다. 알수가 있어요 이클립스 플러그인으로 들어가 있는 jre가 인스톨

되어 있다. 아실수 있어요 아님 따로 설치하셔도 됩니다. JAVA랑 JDK랑 JRE를 따로 설치하셔서 이클립스를 구동하셔도 됩니다 .크게 상관이 

없는데 이렇게 플러그인으로 같이 깔리는 걸로 사용하셔도 되고 내가 이클립스를 설치하셔도 되고 안쓰는 경우에는 자바를 따로 설치하셔야 되잖아요

요상태에서 Finsh를 선택하시게 되면 내가 모듈파일을 만들거냐 물어보는데 이런거는 안만들거에요 Don Create눌르고 왼쪽에 자바프로젝트가 만들어 

집니다. 이프로젝트에다가 코딩을 하시면 돼요 코딩을 하시는데 src새로운 거를 부르는 키는 ctrl+n키를 누르시면 돼요 이중에서 니가 뭐를 만들거냐

java 자바프로젝트를 여기서도 만들수도 있구요 나중에 클레스 인터페이스도 만들겠죠 근데 모든 클레스는 패키지 안에 들어가 있는게 좋습니다. 

pa패키지라고 쓰면 패키지가 나오죠 패키지의 의미에 대해서는 제가 조금있다 다시 설명을 드릴거구요 패키지를 생성 안하고 소스를 넣게 되면 디폴트로 

패키지로 들어가게 되요 패키지가 없는 상태로 근데 패키지는 일종의 소스의 묶음이라고 생각을 하시면 되요 간단하게 먼저 패키지를 만들고요 근데 패키지는 안에다가 

소스를 넣는데 좋다고 말씀을 드렸잖아요  kr.or.kh01 패키지이름은 숫자들어가도 상관은 없구요 다 소문자로 하시는게 좋아요 패키지이름의 대소문자는 쓰지 않습니다. 

이거는 일종의 통상적으로 쓰는 규약이라고 보시면 돼요 패키지의 이름을 소문자로 쓴다. 이렇게 만드시고요 ctrl+n누르시면 class 쓰고 엔터를 치고 

HelloJava 클레스이름을 대문자로 시작하는 게 좋습니다.  마지막으로 main함수를 체크하시고 넣습니다. finsh누르시고요 font좀 작죠 woindow->프리페어런스

가셔서 좋은 글꼴로 변경하시면 됩니다. ctrl+d하면 한줄이 지워집니다. 요거자체코드도 이제 처음보시는 분들은 이게 뭐지 그럴수도 있는데 kr.or.kh01안에

HelloJava.java라는 클레스가 만들어집니다. main이라는 함수는 구동하기 위해서 사용하는 함수에요 이함수를 항상 쓰느냐 그렇지는 않습니다. 자바에서 이 메인이라는 

함수는 여기서돌리기 위해서 쓰는건데 우리가 첫시간에 말씀드렸듯이 자바라는 언어는 웹서버에 올라가서도 많이 돌아가요 그러면 자바 클레스를 구동하는 거는 

스스로가 아니라 웹서버에 의해서 구동되는경우가 굉장히 많거든요 그렇기 때문에 요 메인이라는게 안쓰이는경우도 많습니다. 그런데 인제 우리는 지금 웹서버에서 자바를 

돌리는게 아니라  여기서 실제로 돌리고 테스트를 해봐야 하는거잖아요 그래서 메인함수로 돌리겠습니다. 여기다가 System.out.println("Hello, Java");  이렇게 만들었습니다. 

이부분은 뭐냐 일단은 출력을 해라 구문이라고 이해하시면 되겠습니다.  화면에 출력을 해라  컴파일을 하시는 방법은  여기 제가 코딩을 하면  클레스이름에 *같은게 보이죠

애가 변했다는 거에요 에디팅이 됐다. 라는 의미고 그러면 이걸 인제 저장을 하기 위해서 ctrl+s를 누르게 되는데 ctrl+s를 누르면 *표가 없어지죠 ctrl+s를 누름과 동시에 애가

컴파일이 됩니다. 그래서 메뉴에 Project를 보면 Bulid Automatically 가 이클립스가 체크가 되어 있는데 이게 기본인데 이렇게 되어 있으면 저장할때마다 알아서 컴파일합니다. 

이것을 안하시면 내가 빌드를 직접하셔야 돼요 굉장히 번거롭거든요 그래서 요상태로 그냥 두시고 그래서 결국은 저장을 하면 ctrl+s를누르면 컴파일이 된다. 자바에서 컴파일이 

되고나면 HelloJava.class라는 파일이 만들어집니다. 그 클레스파일이 구동된다고 말씀을 드렸구요 일단 실행을 해볼까요 위에 녹색(RUN)버튼이 있죠 단축키는 ctrl+f11입니다. 

콘솔창에 Hello, Java라고 출력이 잘되었습니다. 폴더가 그럼 어떻게 생겼냐 잠깐 보시면 Workspace 작업공간안에 Chapter1이라는 프로젝트를 만들었습니다. 그리고 나서 소스

파일 밑에 가보면 kr.or.kh01 라는 패키지가 만들어졌죠 HelloJava.java 라는 자바파일이 만들어졌어요 클레스하나당 자바파일이 하나인경우가 많이 있습니다. 자바파일하나에 

클레스여러개가 들어갈수 있어요 지금은 클레스가 하난데 클레스가 여러개 들어갈수 있어요 그런경우엔 public 이라고 써있는 클레스는 하나만 있어야  합니다. 나중에 그건 

다시 말씀을 드리고요 어째든 HelloJava.java 요게 코딩한 클레스에요 그러면 컴파일이 됐잖아요 그러면 컴파일된 클레스는 파일이 어디에 있느냐 여기에 가보시면 bin폴더가 있습니다. 

bin이라는 폴더가 있고 똑같이 kr.or.kh01라는 폴더가 있고 HelloJava.class라고 있죠 실제로 구동되는거는 HelloJava.class가 구동이 된다. 이번강의에서 간단하게 출력하는 프로그램

만 한번 사용을 해봤습니다. 뭐 어렵진 않으셨을 거에요 여기에는 사실 객체지향의 개념은 없는 그냥 일반적으로 출력하나 해보는  그런 프로그램이었습니다. 점점 배우시면서 

클래스라는 것이 뭔지 그다음에 시스템(System) 이런것들도 JDK에서 제공되는 클레스거든요 이런것들을 어떻게 활용하는지 계속 말씀드리도록 하겠습니다. 다음강의에서 

이제 우리가 좀더 자바에 대한 여러가지 애기들을 나누어 보도록 하겠습니다. 

