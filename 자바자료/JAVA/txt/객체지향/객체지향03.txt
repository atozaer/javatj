이번시간에는 그 메서드하기전에 함수라는거에 대해서 살펴보구요 메소드는 함수의 일종이거든요 그래서 함수의 한종류중

하나데 함수라는게 어떻게 구현이 되고 어떻게 돌아가는지 그거를 이해를 하시고 그다음에 메소드를 또 애기를 해보도록 

하겠습니다. 음 함수 다른말로 펑션이라고 이야기를 하구요 굉장히 오래전부터 프로그래밍 언어에서 사용되던 방식입니다.

서브루틴이라는 이야기도 하구요 하나의 기능을 구현하는 일련의 코드 명령셋인데 어떤 함수의 기능이 구현됐다. 하면 

그 함수는 호출해서 쓸수가 있어요 그 함수를 불러쓴다라고 이야기를 하는데 그 함수를 호출 콜한다고 이야기를 하구요

함수가 호출이 되면 그 함수가 수행이 됩니다. 수행이 되고 수행이 끝나면 함수는 다시 반환이 제어가 되는거죠

여기서보시면 어떤 프로그램이 A라는 {  } 함수에서 쭉 돌아가다가 지금 더하기 함수있죠 add();함수를 부르게 되는거에요

add(){  }라는 함수쪽에 지금 저는 매개변수는 생략했습니다. add(); 에드라는 함수쪽으로 쭉 제어가 넘어가는거에요

쭉 수행이 되다가 수행이 끝났죠 다시 add(); 콜한쪽으로 반환이 되는거죠 반환이 되게 될때 어떤값이 반환될수도 있구요

아니면 값 반환없이 제어권만 add(); 함수쪽으로 와서 함수 밑에있는 내용이 쭉 수행되는 일들이 일어날수 있습니다.

자 그래서 함수는 이제 기능을 구현한다라고 했을때 이 구현된 기능은 여러곳에서 호출해서 쓸수가 있어요

두개의 정수를 더하는 함수를 내가 만들어  놨는데 두개의 숫자를 입력받아서 더하는 기능이 있다.

음 그럼개가 더하는 결과를 받고 싶다. 더하기 함수를 부를수 있구요 가장 좋은 성적 두개를 더한다. 가장 좋은 성적

두개를 보내면 더하기 함수에서 반환을 해주겠죠  거리를 할때 거리를 더한다. 애도 거리를더해서 반환해 줄수 있습니다.

이처럼 하나의 함수를 만들면 여러군데에서 호출해서 쓸수 있기 때문에 함수라는게 이런면에서 유용한거죠 그래서 하나의

기능을 구현해 놓고 그기능을 여러군데에서 공유해서 쓸수가 있구요 또 하나의 함수의 이점을 보시면 더한다라는 동일한

기능에 대해서 따로따로 구현을 했을때 만약에 오류가 생겼다. 라고 하면 각각의 디버깅을 하셔야 되는데 이렇게 한군데서

구현을 해놓고 전통적인 기능으로 구현을 해놓는다면 여기만을 수정을 하면 되겠죠 그런일들이 있어서 함수를 많이 사용하고

있습니다. 함수는 정의하시는 방법이 이젠 맨위에 선언부분이 가장 중요해요 물론 구현부분도 잘구현을 해야 하지만 

이 함수의 이름 함수는 이름이 있어야 되구요 이 함수가 수행되기 위해서 필요한 인풋이 있는지 있다라고 하면

써주시면 되고 없으면 ()괄호로 처리하시면 됩니다. 괄호열고닫고 근데 이함수같은 경우는 정수두개를 받아서 그결과를 반환

하는 함수이기때문에 정수두개를 받는 이거를 매개변수라고 하거든요 두개의 매개변수가 있구요 매개변수는 타입과 함께 

변수이름을 써주시면 됩니다. 그러면 함수구현부안에서 두개를 더해서 돌려주어야 되잖아요 그죠 두수를 더해서 돌려주기 

위해서 사용하는 키워드가 return 리턴이구요  가져가라 return리턴 뒤에 써있는 요 데이터형하고 동일하게 선언부 맨앞에 

써주시면 됩니다. 이거를 반환값에 대한 데이터타입이라고 이야기를 하죠 함수는 데이터타입을 하나 쓰시고 이름쓰시고

매개변수를 쓰시는데 반환을 안하는 경우도 있어요 수행만 하고 반환을 안할수도 있죠 그때는 선언부 맨앞에다가 void보이드

라고 쓰시면됩니다. 반환이 없는 함수는 void보이드하고add(){ }이렇게 쓰시면 돼요 매개변수가 없는경우는 ( )안을 아무것도

안쓰셔도 됩니다. 자 그래서 함수를 직접 구현을 해볼텐데요 음 아시겠지만 사실 클레스에서는 메서드를 구현을 할거에요

지금 하는거는 그냥 함수를 불러서 쓴다.라는것만 연습해볼려고 하는거니까 이거는 oop프로그래밍이라기 보다 일반적인 

함수를 사용하는 법에 대해서 애기를 할거구요 요기앞에 static키워드가 다 붙어서 특별히 객체없이 호출해서 사용하게끔 

요렇게 구현을 해놨습니다. 요 내부에서 자바에서는 이따가 메서드를 사용을 하고 그거를 어떻게 호출을 해서 쓰는지를 

다시 말씀을 드리도록 하겠습니다. 함수의 기본원리를 보기 위해서 하는거니까 요 같이 한번 보도록 하죠 자 이클립스를 

여시구요 자 우리가 package는 kr.or.kh03으로 작성

기존에 package가 02였네요 f2를 누르시고 kr.or.kh02로 바꾸어주세요

패키지만드셨고 클레스만드셔서 FunctionTest main()함수넣으시고 피니시합니다.

아 여기서 살펴볼거는 함수를 어떻게 호출해서 사용한다. 라는것만 살펴볼거구요 객체지향프로그래밍에서 메소드를 쓰는

거랑은 좀 차이가 있으니까 나중에 뒤에서 보실거고 그래서 여기다가 public static int addNum(int num1, int num2) {  }함

수를 만들었구요 이 static키워드에 의미는 굉장히 중요한 의미데 이것도 나중에 말씀을 드리겠습니다.

반환해줄 데이터타입은 인트고 메소드이름은 addNum(int num1, int num2){int result;
  result = num1 + num2;
  return result;
 } 두개의 매개변수를 받았다.

이거를 보시면 매개변수 두개를 받아서 더해서 반환해 주는구나 라는거를 어렴풋이 짐작을 해줄수가 있죠

요렇게 만들었습니다. 그다음에 반환값이 없는 경우는 public static void sayHello(String greeting){ 
System.out.println(greeting); 
} 요렇게 만들어볼까요 이렇게 출력을 할껍니다. 이제 반환만 하고 매개변수가 없는 거는 public static int calcSum(){ 
 int sum = 0;
 int i;
 for( i=0;i<=100;i++){
   sum+=i;
   }
  return sum;
}

쭉 숫자를 더해서 1부터 100까지 더해서 그 값을 반환해 줄겁니다.

세종류의 함수를 살펴봤는데 하나는 매개변수도 있고 반환값도 있는거 또하나는 매개변수는 있고 반환값이 없는거

또하나는 반환값이 있고 매개변수가 없는거 요렇게 봤습니다. 메인에서 불러서 쓰는거는요 두개의 값을 더하는 함수

main() 안에서 두개의 값을 더하는 함수  int n1=10; int n2=20; 자 10하고 20십을섰는데 이숫자를 더할거에요 

그 더하는거는 위에 addNum이 있었죠 그래서 함수를 부르시는겁니다. 그리고 애를 부를려고 보니까 addNum()괄호안에서

ctrl+space를 누르시면 헬퍼가나와요 여기에 두개의 변수를 넣어라 add(n1,n2);요렇게 넣고요 애가 반환해 주는 값이 있잖아요

개를 받으시면 됩니다. 반환해주는걸 받을거죠 int total = addNum(n1,n2);요렇게 받아서 요거를 출력을 해볼게요 

System.out.println(total); 어 아까 sayHello같은 경우는 greeting만 넣으시면되죠 sayHello("안녕하세요"); 섰구요 

어 마지막으로 인제 칼큐레이트 애도 total로 받을까요 total=calcSum(); 1부터 100까지 더해서 System.out.println(total);실행을 

해보면 요렇게 나오는걸 아실수 있죠 함수를 잠깐 본거는요 지금 메소드를 하기 전에 애가 어떤원리도 돌아가는지 어떻게 

호출하는지 그거를 지금 볼려구했구요 그리고 메모리를 잠깐 생각을 할께요 음 앞으로는 우리가 객체 애기할때 메모리

애기도 많이 하게 되거든요 그래서 프로그램적으로 알아두셔야 되는 부분이기도 하고 메모리애기를 잠깐 하도록 하겠습니다.

자 옆에 코드랑 같이 보면서 애기를 하도록 할게요 여기를 보시면 음 변수이름이 인제 조금 다르긴 한데 여기서는 num1,num2

sum 이렇게 했죠 그게 중요한건 아니니깐 n1하고 n2두개의 값을 넘겨줘요 어디다가 addNum한테넘겨주죠 n1n2두개의 

값이 addNum으로 넘어가게 되면 무슨일이 일어나느냐에 대해서 이야기하도록 하겠습니다. 그림에 맨밑에 있는게 

main함수에요 이 스택메모리라고 하고요 함수가 호출이 되면 그 함수안에서 쓰이는 변수들이 있어요 

자 여기서 보시면 addNum이라는 함수가 호출이 되면 넘어오는 매개변수들이 있고 그리고 요안에 반환값을 위한 result라는

변수도 있죠 요안에서쓰이는 요런값들을 답뭐라고 하냐면 지역변수라고 합니다. 전에도 제가 지역변수애기했죠 블럭에서

정의되는변수가 지역변수다 라고 애기를 했는데 addNum에서보시면 애네들이 다 지역변수에요 

지역변수데 메인도 보시면 메인도 지역변수가 있습니다. 여기보면 n1하고 n2하고 total 애네도 지역변수입니다. 

그래서 맨아래에 그림을 보면 지역변수가있다는 거죠 main함수에 sum,num1,num2라고 있는데 이름은 다르지만

요런 지역변수가 있었고 여기서 제가 뭘 불렀냐면 addNum이라는걸 불렀어요 부르게 되면 어떻게 생기냐면 

위에 그림처럼 이렇게 메모리공간이 다시 생깁니다. 그래서 요메모리공간을 우리가 누구의 메모리공간이라고 하냐면 

함수의 메모리공간이라고 이야기를 해요 그래서 요기는 함수가 add()데 코드에서는 addNum이라고 보시면되고

메모리공간이 생성이 되고 여기서쓰는 지역변수가 3개가 있죠 num1,num2,result addNum을위한 공간이 생기는거에요

그리고  요기에 생겨요 생기고 나서  그리고 이함수가 쭉 수행이 되고 나면 result가 반환이 되잖아요 반환이 되면 다시

애는 자동으로 없어집니다. 다시 맨아래그림으로 돌아와요 add()함수가 사용한 공간은 자동으로 사라진다.

지역변수같은 경우는 그지역에서만 쓰고 그 함수의 수행 그블럭이 끝나면 자동으로 그쪽에서는 없어지는 

그런변수가 지역변수에요 지역변수고 이 함수의 호출이 일어나면 그 불려진 함수를 위한 메모리공간이 새로생긴다.

라는거 이런메모리를 스택메모리라고 해요 스택메모리 이원리는 우리가 말할 메소드에서도 동일하게 적용되는 

원리입니다. 그래서 말씀을 드렸구요 요거를 말씀드린 이유는 나중에 객체를 이야기를 하면 Heap이라는 메모리공간이 

있어요 Heap메모리공간을 애랑 다른 메모리공간이거든요 그애기도 같이 드리거니까 미리 말씀을 드렸고

함수에서쓰는 메모리공간이고 지역변수들이 자리를 잡는다.라는거 이해해 주시면 될것 같습니다.

자 이제 메소드에 대해서 이야기를 하고 그다음 강의에서 직접구현을 해보도록 할게요 

객체의 기능을 구현하기 위해서 클레스내부에 구헌되는함수에요 함수와 메소드의 차이가 뭐냐면 

함수는 어디 속해있는게 아니에요 단독 모듈이고 게를 호출해서 쓰면 되는데 메서드는 클레스안에 속해 있습니다.

클레스안에 있고 그 클레스의 멤버변수들을 활용해서 구현된 애가 메소드에요 함수의 일종이긴 한데 

객체지향프로그램에서 클레스안에 있는게 메서드죠 그래서 c++에서는 주로 멤버함수 멤버펑션 이라고 이야기를 하구요

자바에서는 메서드라는용어를 더 많이 사용합니다. 저는 메서드라고 애기를 할거구요 

메서드를 구현을 하면 그 객체가 해야되는 기능들 역할들 이런것들을 구현을 하게되고 메서드의 이름은 

그 객체를 사용하는객체 객체를 사용하는객체 좀 햇갈리는데요 객체가 있으면 그 객체를 다른객체가 사용하는 일들이 

있어요 이게 협력의 하나의 방법이겠죠 그죠 그러면이제 사용할때 메서드를 호출할거란 말이에요 그럼 호출하는쪽 

입장에서 명령을 하시는게 좋아요 밑에있죠 저쪽에서 스튜어던트이름을 가져갈거다 그죠 이객체에서 이객체를 사용하는

다른객체에서 스튜어던트이름을 달라고 그런다. 그러면 getStudentName()이라고 쓰시는게 좋다. 라는거죠 그래서 그렇게

쓰시고 마찬가지로 카멜로테이션으로 쓰시면 되겠죠 소문자로 시작해서 중간중간에 대문자로 쓰는거 요렇게 하시면 

될것같습니다. 음 이론적인 거를 많이 이야기를 했는데 실제적으로 어떻게 구현을 하는지 그리고 어떻게 사용을 하는지

같이 살펴보도록 하겠습니다.



