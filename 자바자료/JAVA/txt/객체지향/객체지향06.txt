자 이번에는 생성자에 대해서 알아보겠습니다. 어 우리가 지난 시간에 객체를 만들고요 객체를 어떻게 선언하느냐

멤버변수를 어떻게 쓰느냐 이런 것들에 대해서 말씀을 드려봤고 객체를 생성해서 써봤거든요 그때 사용하는 

호출했던 그게 생성자라고 합니다. 함수랑은 좀 다른데요 지난시간에 했던 코드를 잠시 보시면 우리가 테스트코드가 

StudentTest 요렇게 되어 있었습니다. 제가 요걸 좀지우고 좀 해보셔라 Student를 지우고 테스트에서 거꾸로 좀 해보셔라

라는 말씀을 드렸었고 여기보시면 스튜어던트라는 클레스의 이름으로 StudentLee라는 변수를 선언하구요 new Student하죠

new Student()요게 생성자니다. 그니깐 자바에서는 객체를 사용할때 항상 생성자를 호출하셔야 되요 어 예전에 int num=10;

이렇게 섰던 변수들 있죠 애네들은 생성자를 쓰지않습니다. 애네들은 4바이트짜리 int 인티져다라는게 정해져있고 

내가 인트넘을 선언하는순간 메모리에 4바이트가 잡혀요 그런데 Student라는 이런 객체인경우에는 항상 생성자를쓰시고

이생성자는 어디에 생성이 되냐면 힙이라는 메모리에 객체가 인스턴스가 생성이 됩니다. studentLee요거를 인스턴스를 

가르키는 참조변수다 라고 말씀을 드렸고 애를 직접 출력을 해보면 어드레스가 출력이 되는걸 아실수가 있겠죠 자 그래가지고

new Student() 요기에 생성자가 있는데 생성자가 진짜 있었냐 저번에 했던 스튜어던트코드를 잠깐 가보면 제가 조끔 바뀌긴했지만 

여길보시면 지난번에 했던 코드에는 생성자가 없습니다. 없지요 없는데 요기를 불러다 섰고 직접 출력도 했습니다. 그렇게 할수

있는 이유는 뭐냐면 어 자바클레스인경우에 생성자를 하나도 제공하지 않으면 어떤 생성자가 만들어지냐면 디폴트 생성자가

만들어집니다. 디폴트컨스트럭터라고 하구요 이거는 컴파일러가 넣어주는 코드에요 우리가 컴파일단계에서 보면 바이트코드가 

만들어지기 전까지 아니면 C언어가 만들어지기 전까지 여러가지 단계들이 있는데 제일처음에 프리컴파일러 단계라고 해서 

애가 약간 이젠 명령어구조로 바뀝니다. 바뀔때 필요한 코드들이 중간중간에 들어가요 우리가 섰던 코드외에도 컴파일할때

필요한 코드들이 들어가는데 이때 디폴트컨스트럭터도 같이 들어가게 됩니다. 이때 생성자의 문법을 보시면 생성자는 우리가

직접만들려고 하면 클레스네임을 쓰시구요 아규먼트리스트 어떤 아규먼트가 들어갈건지 그뒤에 스테이트먼트 명령문들을 

적으시면 됩니다.코드를 넣으시면됩니다. 줄이 이렇게 내려가서 쓰여야 겠죠 생성자는 new키워드하고 같이 쓰시면 되요 

new Student();그러니깐 특별히 생성자를 쓰지 않았던 클레스 명시돼있지 않은 클레스도 new 해서 사용을 하시면 인스턴스를

생성할수있다는 말씀을 드리구요 생성자는 일반 함수처럼 내가필요하다고 호출해서 쓰는게 아니고 생성을 하기위해서 쓰는게

생성자니다. 객체를 생성할때만 호출이 되는거구요 생성자는 주로 하는 일이 뭐냐면 지금 이런경우에는 사실 기본생성자보시면

요렇게  들어가게 돼 있는데 public Student(){ } 코드가 하나도 없죠 그죠 디폴트콘스트럭터 같은 경우는 매개변수도 없고 

그다음에 구현코드도 없는 이런코드가 들어가게 되구요 근데  우리가 실제로 생성자를 만들어서 내가 직접 코딩을 할수가 

있는데 그럴때는 주로 객체가 생성이 될때 필요한 초기화 단계 변수가 이니셜라이즈된다든가 상수가 이니셜라이즈된다든가

객체변수들을 가져왔는데 그 객체변수들을 생성을 한다든가 여러가지 초기화 과정들이 필요합니다. 그런 초기화과정을 하기

위해서 사용을 많이 하죠 생성자는 반환값이 없어요 메서드는 지난시간에 메서드를 했었는데 메서드는 반환값이 있고

반환타입을 반드시 명시하셔야 된다. 만약에 반환값이 없는 경우는 void 라고 명시를 한다고 말씀을 드렸는데 

생성자는 반환값이 없고 생성자의 이름하고 동일합니다. 어 대부분의  생성자는 왜냐면 음 public 퍼블릭으로 선언이 돼 

있어요 외부에서 access 액세스 가능합니다. 접근 가능하구요 그 이유는 당연히 외부에서 생성을 할려고 생성자를 만들어

놨으니까 대부분은 오픈되어있는데 가끔 필요에 의해서 private으로 선언해서 내부에서쓰는 생성자도 있을수 있습니다.

아직 접근제어자에 대해서 말씀은 안드렸는데 private 이라는 키워드가 먼저 나왔죠 외부에서 접근할수 없도록 만드는 

생성자도 간혹 있을수 있다. 기본생성자는 생성자 말씀드리면서 말씀을 드렸는데 클레스에는 적어도 반드시 하나이상의

생성자가 존재해야 합니다. 왜냐면 어 객체가 있고 객체를 생성해서 쓰는거기 때문에 존재해야 되는데 모든 생성자를 

구현하지 않아요 클레스를 할때 클레스를 구현할때 생성자를 안만드는 경우들도 있거든요 안만들게 되면 이제 컴파일러가

기본생성자를 넣어주게 된다. 기본 생성자는 보시다시피 매개변수도 없고 구현부도 없습니다. 음 그럼 코드로 생성자를 

만들어보구요 어떻게 사용하는지 같이 보도록 하겠습니다. 소스를 선택을 하시고 ctrl+n누르신다음에 package하시고

오늘이 6강이니까 kr.or.kh06 이렇게 만들겠습니다. 지나시간처럼 class Student을 하나 만들어볼까요 코드가 수업자료에 있지만 

여러분들이 저랑  수업하시면서 코드를 자꾸 작성을 해보셔야 돼요 손에 코드가 익어야 본인이 다른코드를 만드실때 훨씬 

편하거든요 자바도 그렇고 모든언어를 배우실때도 마찬가지데 자바언어도 그렇고 C언어도 그렇고 파이선도 그렇고 하나씩 

배울때마다 코드형식이 다르고 손에 익는 시간이 좀 걸립니다. 이거는 많이 해보셔야 되요 그래서 카피앤 페이스트 하지 

마시고 제가 코드할때 여러분들도 같이 하셨으면 좋겠습니다. 

public class Student{

        int studentNumber;
        String studentName;
        int grade;

        public String showStudentInfo(){
           return studentName + "학생의 학번은 " + studentNumber +"이고," +grade +"학년입니다."; 
      }
      스튜어던트테스트코드를 클레스를 작성하시고
     StudentTest 클레스에 메인을 넣으시고 애가쓰는 코드라고 그랬고 종종 쓸텐데 전에도 한번 말씀드린적이 있는데 
     오브젝트를  가져다 쓰는 코드를 클라이언트코드라고 한다.  서버클라이언트개념이 서버쪽을 제공해주는 모듈
     서비스를 사용하는 쪽 모듈 요렇게 개념을 갖게 되거든요 소프트웨어적으로는 하드웨어적으로는 서버기계
     여기있는 pc가 클라이언트 웹페이지가 클라이언트이렇게 될수 있지만 음 소프트웨어적으로는 어떤 서비스를 
     제공하는 모듈 객체가 서버 서비스모듈 애가 클라이언트모듈 요렇게 되거든요 그래서 Student객체가 있으면 
     스튜어던트를 가져다 쓰는 거잖아요 Student studentLee = new Student(); 요렇게 쓸수있는 이유는 

System.out,println(studentLee.showStudentInfo()); 이렇게 해서 애가 스트링을 반환하니까 요렇게 쓰시면 되겠습니다.

그래서 이거를 아무것도 안했는데 run을 해보시면 null학생의 학번은 0이고, 0학년입니다. 여기서 우리가 한가지 

알수 있는 거는 뭐냐면요 멤버변수는 이렇게 만들어지면 자동으로 초기화가 된다는걸 아실수가 있어요 

그래서 여기에 이름같은 경우는 객체이기 때문에 null로 초기화가 된거구요 int 값은 0으로 초기화가 됐습니다.

아무것도 내가 정보를 안줬기 때문에 애가 초기화 된값을 그대로 섰죠 그죠 이거를 잠깐이야기를 해서 

저번에 지역변수 같은 것을 이야기를 했을때 int i; 요렇게 하면 요값을 내가 찍을려고 하면요 

public String showStudentInfo(){
   int i;
   return studentName +"학생의 학번은" +studentNumber+"이고,"+grade +"학년입니다."+i; 에러가나요
}
애가 오류가 나는 이유는 애는 이직역에서만 쓰는 변수데 자동으로 초기화가되지 않는다고 말씀을 드렸구요

예전에 아마 for문할때 말씀을 드렸을 겁니다. 그래서 멤버변수하고 지역변수는 완전다른타입의 변숭입니다.

같은 인트라고 섰지만 int grade; 애는 멤버변수이기 때문에 객체가 만들어질때 초기화가 되는거죠 

자 변수애기를 조금 했구요 나중에 변수를 쭉 정리를 해서 말씀드릴기회가 있을 거에요 어 이렇게 

생성자가 만들어진다고 했죠 public Student(){ }직접만드셔도 됩니다. 그리고 여기서하나 System.out.println("student생성");

하나쓸수도 있어요 그래서 여기서 run을 해보시면  student생성출력되면 애가여기서불렸다라는 걸 알수도 있구요

그다음에 각각 값이 이렇게 초기화가 되서 정보 아무것도 없는 정보가 출력이된거죠 자 근데 저는 이러고 싶은거죠

나는 생성자 스튜어던트를 생성할때 그학생의 이름과 그다음에 학번과 학년을 매개변수를 받아서 초기화를 해주고 

싶다. 어 우리가 이런경우를 생각을 해보세요 웹페이지에서 내가 회원가입을 해요 그러면 회원가입을 하기 위해서

내가 아이디쓰고 패스워드쓰고 이름쓰고 주소쓰고 서브및 딱때리잖아요 그럼 애가 서버로 가서 내정보가 어째든

디비에 들어가게 되는데 그과정이전에 나라는 정보 회원이라는정보 객체로 만들어진다는거죠 그 객체로 만들어지기

위해서는 넘어온 파라미터들을 가지고 그 객체가 초기화가 되는겁니다. 그죠 어떤 정보가 넘어왔을때 그 정보를 가지고

그죠 애가 초기화가 될수 있다는거에요 그래서 요넘어오는 정보들을 내가 가지고 초기화를 하겠다.

public Student(int studentNumber,String studentName,int grade){
  
}
요렇게 넘어온거죠 변수가 넘어왔고 그래서 요거를 내 멤버변수에다가 초기화를 시켜서 뭐를 하겠다 스튜어던트를 생성

하겠다는거에요 내가 웹페이지에 적은 정보를가지고 나라는 회원을 생성을 한다음에 다른 일들이 일어나서 DAO를 거쳐서

디비에 들어가겠죠 그죠 그런거랑 마찬가지로 그때 스튜어던트넘버는 스튜어던트넘버다라고 하는데 인제 우리가 이때 

또하나가 생각해야 될게 뭐냐면 요렇게 쓰시면 안됩니다. studentNumber = studentNumer; 요렇게 쓰시면 안되는 이유는 

뭐냐면 제가 일부러 이변수이름을 멤버변수와 똑같이 섰어요 대부분요렇게 많이 씁니다. 이렇게 많이 쓰기 때문에 많이 

섰구요 요때 요렇게 쓰게 되면 어 애가 변수를 찾는 가시성은 어디서가장 변수를 찾냐면 자기랑 가장 제일가까운데서 찾아요

그럼 지역변수랑 말이죠 그죠 그럼 이름으로 돼 있는 변수가 매개변수에 구현부에 있는 변수는 매개변수만 찾으니까 

애가 결국은 자기가 넘어온 매개변수가 매개변수에다 값을 대입하는 그런 형식이 됩니다. 우리가 원하는 건 뭐냐면 

내 멤버변수에다가 넘어온 값을 대입하고 싶어요 그게 생성자의 역할이잖아요 생성자가 객체가 생성이 될때 자기가 받은 

파라미터의 값을 자기 멤버변수에다 넣어주는게 생성자의 역할이니까 이때 쓰는 키워드가 this입니다. 이렇게this라고 

쓰면 색깔이 바꼈죠 변수의 색깔이 이클립스에서는 멤버변수를 파란색으로 기본적으로 표현을 하는데 요때 스트어던트

넘버는 멤버변수를 가르치구요 this가 없는 스튜어던트넘버는 매개변수를 가르칩니다. 디스를 안쓰시면 안돼요 

근데 변수이름이 다르면 상관이 없어요 그럼 왜 변수이름이 같게 하나요 같게 하는게 나중에 우리가 찾아보기도 좋고

이것도 작업하기에 훨씬좋습니다. 아 이변수는 이변수에다 넣기위해서 이렇게 하는거구나 this.studentName=studentName;

디스라는 애를 이용해서 메버변수임을 지정해주고 넘어온메개변수를 이렇게 넣어주시면돼죠 디스에대해서는 나중에 

좀더 말씀을 드리겠습니다. this.grade=grade;이렇게넣구요 자 요렇게 하고 제가 저장을 저장과 동시에 컴파일이 된다

라고 했는데 그러면 StudentTest소스를 보시면 요기 오류가 났죠 보면 new Student(); 요기서오류가 났습니다.

애는 디폴트생성자잖아요 디폴트생성자에서 오류가 난이유는 뭐냐면 디폴트생성자가 제공되는 경우는 클레스에 생성자가

하나도 없는경우에만 컴파일러가 생성자를 제공해 줍니다.

근데 우리가 지금 생성자를 만들었죠 직접 생성자를 직접만들게 되면 애는 제공되지 않아요 어 근데 저는 애도 쓰고싶은데요

그런 경우는 어떻하냐면 Student클레스에 직접 디폴트생성자를 만드시면 됩니다. public Student(){ }생성자가 두개 있죠 

이게 바로 우리가 요다음에 말씀드릴 컨스트럭터 오버로딩입니다. 생성자 오버로딩입니다. 똑같은 이름의 생성자가 여러개

있는 상황인데 요렇게 만들면 오류가 없어지죠 우리가 만든 생성자를 직접 써볼까요 Student studentKim = new Student();

라고 하시고요 ()안에서 ctrl+space를 딱눌러보면요 생성자가 보입니다. 그리고 변수들이 요렇게 보이죠 요변수들이 멤버

변수이름하고 똑같잖아요 요런것들이 나중에 우리가 프로그램할때 도움이 되는거죠 그렇죠 처음엔 넘버를 써라 

123456을 쓰고 그다음에는 이름을 써라 kim이라고 섰고 그다음에는 학년을 써라 3학년Student studentKim = new Student(123456,"kim",3);

System.out.println(studentKim.showStudentInfo()); 실행을 해보면 결과를 볼수있겠죠 음 이렇게 생성을 하고 멤버변수를 

각각을 넣으시면됩니다. studentLee.grade = 1; 이런식으로 넣으셔도 괜잖고 아니면 생성자가 제공이 된다라고 하면 

해당생성자를 쓰시면 되는거에요 여기서 보셨을때 여기서 중요한거는 디폴트생성자라는거는 언제만만들어진다. 생성자가

하나도 없을때만들어진다. 만약에 필요하다면 직접 넣으시면 되는거구요 경우에 따라서는 디폴트생성자를 일부러 제공하지

않는경우도 있어요 왜냐면 이 객체를 만들기 위해서는 항상 이름하고 학번하고 grade가 있어야 된다. 이런 필수요소가 있다

이요소가 없으면 이객채를 생성할수 없다.라고 하면 디폴트생성자를 제공하면 안되겠죠 그죠 그래서 이거는 그때그때마다

적절하게 사용을 하시면 좋을것 같습니다.



