자 이번시간에는 접근제어지시자 엑세스모디파이어라고도 하고요 접근제어지시자와 그다음에 이걸로 인해서 정보은닉을 

하게된다. 인포메이션하이딩이라고도 하는데 이 두가지에 대해서 말씀을 드릴건데 그 그동안우리가 public이라는 키워드를 
	
많이 봤죠 그리고 제가 그때 많은 설명을 안드리고 나중에 말씀을 드릴거다라고 했는데 오늘은 그 예기에 대해서 

해드리도록 하겠습니다. 그동안 우리가 작성한 소스들을 보면요 잠깐 볼까요 음 제가 아무것도 안쓰는 경우도 있었구요

그다음에 앞에 public이라고 명시적으로 쓰는 경우도 있었고 이런 다양한 경우들이 있었는데요 애가 접근제어지시자라고

하거든요 public이라고 쓰는 경우랑 아무것도 안쓰는 경우랑 그다음에 두가지가 더있습니다. private하고 protected요렇게 

4가지를 제어를 할수 있는데 이것들이 하는역할이 뭔지 그리고 이걸로 인해서 객체지향중 큰특징중 하나가 인포메인션

하이딩 그리고 이걸로 인해서 엔캡슐레이션 캡슐화 앤캡슐레이션이 구현이 된다. 라고 우리가 애기를 하거든요 

그래서 고 부분에 대해서 같이 말씀을 드리고 이게 왜 중요한지 그다음에 객체에서 객체를 보호하고 그다음에 

외부에서 좀더 유용하게 쓸수 있도록 정보를 오픈하는 그런 방법들에 대해서 말씀을 드리도록 하겠습니다. 

어 그지시자를 보면요 총 4가지가 있는데 애네들의 역할은 어 외부클레스에서 클레스의 멤버변수 메서드 

그리고 생성자를 어떻게 사용할수 있느냐라는거에 대해서 어떻게 접근할수있느냐에 대해서 제한을 가하는 

음 키워드입니다.  그래서 일단 프라이빗 지금까지 한번도 안섰죠 프라이빗이라고 하면은 같은 클레스내부에서만 

접근할수가 있어요 다시 말씀을 드려서 외부클레스에선 절대로 접근을 할수가 없구요 우리가 나중에 상속관계에

대해서 배우게 되는데 상위클레스가 있고 그거를 상속받은 하위클레스가 있을수 있습니다. 에이거를 부모자식클레스

라고도  하고 슈퍼클레스서브클레스라고도 하고 굉장히 밀접한 관계가  있는 클레스거든요 상위클레스가 갖고 있는것들을

하위클레스가 다 상속을 받을수가 있는데 이경우에도 상위클레스의 프라이빗이라고 선언된 변수나 메서드에는 접근할수

가 없습니다. 그리고 어 아무것도 안쓴 경우 있었잖아요 아무것도 안쓰고 코딩을 많이 했었는데 이거는 같은 패키지

내부에서만 접근할수가 있습니다.  다시말씀드려서 우리가 나중에는 구분해서 지금도 구분해서 하고 있지만 논리적으로

패키지의 역할은 소스의 묶음이에요 이러이러한 소스들은 패키지에 묶어놓고 이러이러한 소스들은 이 패키지에 묶어놨다.

라는거고 우리가 그 객체를 가져다 쓸때 애가 어느패키지에 속해 있느냐 나랑 같은 패키지에 속해있는건 상관없어요 

상관이없습니다. 상관이없지만 나랑 다른패키지에 있는경우는 임포트라는 키워드를 해서 써요 기억하실지 모르겠는데 

스캐너우리가 쓸때 스캐너가  자바유틸 패키지밑에 있어서 그거를 우리가 임포트해서 섰었거든요 네 그래서 패키지가 

같은 패키지안에 있는경우는 접근제어지시자를 안쓰면 그안에서 사용할수가 있습니다. 패키지가 다르면 당연히 접근이 

안되겠죠 그다음에 프로텍티드라는 키워드가 있는데 아까 프라이빗설명하면서 상속관계에 있는 클레스들이 있다. 

상위클레스가 있고 상위클레스에 모든 멤버와 메서드를 상속받는 하위클레스가 있을수 있는데 이 상위클레스 하위

클레스관계에서도 프라이빗인경우는 접근을  할수가 없습니다. 상위클레스에 있는 프라이빗변수를 하위클레스에서 

사용할수가 없어요 근데 이것도 쓰게 하고 싶다 라고 하면 프로텍티드라는 키워드를 쓰시면 됩니다. 프로텍티드라는 

키워드를 쓰시게 되면 이때는 하위클레스가 상위클레스에 접근할수가 있어요 접근하실수가 있고 그다음에 프로텍티드

인 경우엔 당연히 같은 패키지도 접근이 가능합니다. 마직막으로 퍼블릭이라는 키워드는 다 그냥 오픈을 해놓는거에요

퍼블릭 공용이라는 뜻이죠 클레스 외부 어디서나 접근이 가능한 이런경우를 말씀을 드립니다. 어 우리가 인제 우리가

이런 키워드들을 왜쓰느냐 프라이빗위주로 한번 볼건데요 프라이빗위주로 보면 프라이빗이라고 막게 되면 외부클레스에서

애한테 접근을 할수가 없습니다. 접근을 할수 없다는 애기는 가져다 쓸수 없다라는 거죠 그러면 이멤버변수를 외부에서

쓸일이 있어요 쓸일이 있는데 접근을 못하니까 어떻게 했느냐 그 밑에 보면 대표적으로 get/set메서드라고 말을 하는데

값을 가져가거나 값을 다른값으로 바꾸거나 하는 메소드를 제공할수가 있습니다. private으로 선언된 변수 다른말로

뭐 속성이나 필드라는 용어도 자주 쓰거든요 그래서 제가 필드라는 용어도 써봤구요 접근 수정할수 있는 메서드를 

public 으로 제공을 합니다. 어 이경우에 인제 만약에 set메서드는 제공을 안하고 get메소드만 제공을 한다. 그러면 

리드온니메소드가 필드가 된다. 라고 말을 하구요 이클립스에서 자동으로 생성이 되는데 예제를 하나 같이 보면서 

저랑 애기해 보도록 하겠습니다. 자 이클립스를 여시구요 우리가 이제 패키지가 kr.or.kh10 만들고 class는 

생일에대한 BirthDay 클레스를 만듭니다. 요생일은 private int day; private int month; private int year; 3개를 가지고 있구요 이거를 

오픈을 해놓은 경우랑 그렇지않은 경우에 대해서는 이제 조금 있다가 말씀을 드리구요 그 어떤 날짜를 줄거에요 

이 날짜가 생일에 적합하냐 안적합하냐 유효한 날짜냐 아니냐 이거를 체크하는 프로그램을 만들건데요 이게 모두

프라이빗으로 주겠습니다. 애네들의 값은 외부에서 접근을 못할거에요 접근을 못하게됐고 그대신에 get/set메소드를 

제공을 할건데 이제 get메소드같은 경우에는 public int getDay(){

   return day;
}
요렇게 해주면 될거에요 그다음에 set메소드같은 경우에는 날짜를 하나 가져와야 겠죠 그니깐은 int 갖고 들어와서 

public void setDay(int day){
 this.day = day;
}
요렇게 넣어줍니다 요런식으로 되겠죠 이렇게 쭉 만드는데 이클립스에 보시면요 source소스에 제너레이트get/set라구

있구요 get/set메서드를 쭉 만들어줄수가 있습니다.  음 이렇게 만들어줄수가 있어요 이클립스 유저들에서 제공을 

해주는거구요 물론 이름을 겟데이 셋데이 안하고 리턴데이 메이크데이로 다른이름으로 하셔도 상관은 없습니다.

그냥 오픈을 해놓으면 되니까 그런데 우리가 주로 값을 가져갈땐 get 가져올때는 set 주로 우리가 주로  게터세터라고

많이 이야기를 하거든요 그래서 이클립스에서도 이렇게 만들어주니까 애는  통상적으로 이렇게 멤버변수의 값을 

가져가거나 집어넣을때 게터세터를 많이 쓰는구나 요렇게 이해해 주시면 될것같습니다. 

메서드이름이 딴걸로 바뀐다고 해서 문제가 되지는 않습니다. 그죠 이렇게 해주시구요 그다음에 이제 여기서 

벨리드라는걸 하나둘거에요 private boolean isValid; 투루인지퍼얼스인지만 가지고 있을겁니다. 참고적으로 값이 

처음에 벌스데이의 객체가 만들어져서 이즈벨리드는 블리언이죠 애가 갖는디폴트값 day는 처음생성이 되면 멤버

변수는 디폴트값이 담긴다고 말씀을 드렸잖아요 애가 갖는 디폴트값은 0이고 int저값들은 0을 갖는다고 그랬죠

블리언은 퍼얼스를 갖게 됩니다. 디폴트값을 퍼얼스구요 이즈벨리어드가 있을때 뭐가 맞느냐 맞지않느냐 기본적으로

퍼얼스데 그래서 제공해 주는 거는 public void showDate(){
    if(isValid){
       System.out.println(year+"년"+month+"월"+day+"일입니다.");
   } else{
       System.out.println("유효하지 않은 날짜입니다.");  
   }   
}
만약에 이즈벨리드가 투루다. 지금 애가 투루라는거는 이즈벨리드가 존재하는날짜가라는 거구요 생일날짜를 보여줄거에요 

그리고 그렇지 않으면 엘스 이즈벨리드가 퍼얼스죠  이상태로 놔두면 처음에 이즈벨리드가 퍼얼스기때문에 이제 퍼얼스가 

될거구요 여기서 사용하는 쪽에서 프라이빗이기 때문에 변수로는 직접 지정을 못하겠죠 class이렇게 만드시고 BirthDayTest

클레를 작성하고 메인넣으시고 피니시 하시고 

BirthDay date  = new BirthDay();
date.setYear(2019);
date.setMonth(13);
date.setDay(30);

date.showDate();
요렇게 했을때 이제 우리가 할수 있는거는 뭐냐면요  벌스데이가셔서 이어는 생략하고요 먼스를 한번 해볼게요 

달을 생각해본다라고 했을때 달은 우리가 1월부터 12월까지 있잖아요 1월이하거나 12월 이상인 경우에는 이는 유효한

달이 아닙니다. 그럼 여기다가 어떻게 할수 있냐면 

public void setMonth(int month){
  if(month < 1 || month >12){
    isValid = false;
}else{
   isValid = true;
   this.month = month;
}
자 이렇게 넣어줄거구요 이즈벨리드가 true이게 되면 요날자를 출력을 해주겠죠 월하고 년도 다해야겠지만 요것만 

해보고 출력을 한번 해볼게요 run해보시면 date.showDate(); 유효하지 않은 날짜입니다.이렇게 나왔습니다.  

왜냐면 우리가 달이 13월이기 때문에 그렇게 된거죠 그러면 요기다 가셔가지고 메인에서 월을 12월로 

바꿔볼까요 run을 해보시면 2019년12월 30일입니다. 이렇게 잘 나오죠 자 여기서 우리가 생각할수 있는게 뭐냐면 

어 그러면 이것을 프라이빗으로 막지않고 다 오픈하는 거와 접근지정자를 넣지않고 이렇게 하는경우랑 

프라이빗으로 막아서 get/set으로 제공해주는거랑 무슨차이가 있느냐라고 생각하실수가 있는데 이렇게 

다 열개되면 date.month = 100; 이렇게 넣을수가 있어요 그죠 100달이라는거는 없잖아요 근데 이렇게 넣을수 

있다는 거죠 멤버변수에 오용을 오류를 객체가 잘못사용되는것을 노출하게 되고 객체에 어떤 역할에 대해서 

문제가 생길수가 있어요 그래서 이런경우에는 음 이런값들은  //date.month=100; 프라이빗으로 막아주고

그리고 어떻게 해주냐 메서드에서 제어를 해주는거죠 메서드에서 get/set get은 값을 가져가니까 상관이없지만

set메서드쪽에서 이런것들을 제어를 해주게 되면 쓸데없는 데이터에 오용이 막아지는거죠 또하나 데이같은 경우를

보면요 우리가 몇달이냐에 따라서 어느달이냐에 따라서 날짜가 다 다르잖아요 그거를 우리가 예전에 구현한 적이

있어요 어디서 구현했냐면 스위치케이스에서 구현을 했습니다. 여기다 스위치케이스구문을 넣으면 그 해당되는 

날짜도 할수 있구요 좀더 여러분이 고민을 하시면 윤년개념도 넣을수 있습니다. 윤년이 4의배수가 윤년인데 

100의배수는 윤년이아니구 400의배수는 윤년이구 이런 공식이 있거든요 그거를 적용을 하시면 간단해요 

나머지를 구하는건데 그걸 적용하시면 이 데이에도 정확하게이게 유효한 날짜인지 아닌지를 하실수 있다는 거죠

다시 말씀을 드려서 이렇게 객체의 멤버변수에 private 접근제한을 가함으로써 뭐할수있다. 객체를 사용할때 

오류를 막을수 있고 나중에 디버깅하기도 편합니다. 어디서 잘못됐는지는 메서드쪽들을 보시면 됩니다.

그래서 사용하는쪽에서 사용하는쪽에서 잘못사용할확률을 확줄여주는거죠 그렇다고 모든정보를 다 프라이빗으로

하라 그렇게 말씀드리진 않습니다. 그게 좋은 방법은 아니에요 퍼블릭으로 오픈할거는 퍼블릭으로 오픈해서 

좀더 편하게 쓰게끔 쓰시면 돼요 그런데 그렇지 않고 이런 정보는 어 오용이 되면 안된다는 특히 isValid 이즈벨리드

같은 경우는요 이안에서 이값이 유효한지 안유효한지만 체크하는거기 때문에 밖에 내보낼일이 없어요 혹시라도

밖에서 이즈벨리드를 알고싶다라고 하면 이값을 필드에서 알일도 없지만 set은 제공하지 않아요 애가 값이 정해지는거는

내부에서 이날짜가 유효한지를 결정할려면 이내부로직에서 일어나는거죠 그렇기 때문에 애에 대한 set메소드는 

제공하지 않을거에요 그러면 이런경우는 무슨속성이 되냐면 리드온니속성이 되는거죠 읽어갈수는 있지만

쓸수는 없다. 그래서 이렇게 여러변수나 메서드들이 다퍼블릭으로 되있는데 변수나 메서드에 대해서 접근제어 

기능을 가해서 정보를 숨기는거죠 정보를 은닉한다라고 이야기를 하지만 정보은닉보다는 정보를 보호한다. 

라는 개념으로 보시면 됩니다. 프라이빗으로 제어한멤버변수도 퍼블릭메소드가 제공이 되면 접근은 가능하지만 

어 변수가 퍼블릭으로 변수가 공개되었을때보다 프라이빗일때 변수의 제한을 퍼블릭메소드에서 제어할수있다.

요렇게 가능하다 라는거를 여러분에게 말씀을 드리겠습니다.  어 뭐 저는 여기까지 여러분들하고 코딩했지만 

좀더 하실분들은 스위치케이스넣으셔서 날짜 달에따라서 날짜가 몇일까지 있는지 그게 유효한 날짜인지를 

체크하는 이즈벨리드변수가 멤버변수이기때문에 클레스안에서 한번이라도 퍼얼스가 되버리면 그죠 유효하지

않은 날짜가 되는거구요 어 초기에 말씀드렸듯이 이니셜값이 퍼얼스에요 그렇기 때문에 유효한 날짜라고 

하기 위해서 반드시 TRUE를 해주셔야 된다. 이즈벨리드 TRUE를 해주셔야 된다는 것을 기억하시기 바랍니다.

setMonth에도 써주셔야되죠 이즈벨리드true하고 네 여기까지 보셨구요 다음강의 인포메이션하이딩에서

좀더 추상화된 내용으로 우리가 캡슐화라고 이야기를 하는데 캡슐화에대해서 같이 살펴보도록하겠습니다.
