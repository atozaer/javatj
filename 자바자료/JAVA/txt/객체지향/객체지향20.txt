배열을 좀 말씀을 드릴건데요 한참 이젠 객체지향 이야기하다가 

배열을 중간에 말씀을 드리냐면 우리가 요다음에 인제 다형성이랑 뭐 이런거나 저런거 배울텐데 그때 

자료구조가 좀 필요해요 여러개의 자료를 한꺼번에 관리하는 이런것들이 필요한데 음 그래서 배열을 

먼저 잠깐 말씀을 드릴거구요 그래서 배열을 만들어놓은 자바에 굉장히 유명한 클레스가 있습니다.

어레이리스트라고 그 어레이리스트 객체를 또 많이 쓸거에요 클레스를 그래서 잠깐 맛배기로 배열을

이야기할건데 배열은 굉장히 중요한 자료구조거든요 제가 나중에 자료구조를 쭉 말씀을 드리겠지만 

일단 여기서 어 배열에 대해서 익히시고 그다음에 어떻게 사용하는지 알고 좀더 그러면 우리가 다양한

예제들을 또 활용할수가 있습니다. 자 그럼 보도록 하겠습니다. 음 배열을 설명을 할때 가장 먼저 이야기하는거는 

동일한 자료구조의 순차적 자료구조다 라고 말씀을 드립니다. 여기서 동일한 자료형이라는거는 뭐냐면요 

이 자료가 여러개가 어떤거는 int고 어떤거는 float고 어떤거는 char고가 아니라 동일한 자료 데이터타입이 

동일한 타입의 여기서부터중요한게 순차적이라는거에요 배열을 열차처럼 길게 그립니다. n개의 엘리먼트

어 용어들을 좀더 애기를 해드리면 쭉 나오기는 하는데 배열은 Array라고 이야기를 많이 하구요 그다음에

요 하나하나의 배열을 애네 요소들 엘리먼트라는 용어를 많이 씁니다. 엘리먼트라고도 하고 요소라고도 할거구요

배열은 어떤 길이를 가지게 되요 처음에 우리가 배열을 선언을할때 몇개짜리라고 선언을 하고 시작을 합니다.

배열은 10개면 10개 100개면 100개 이렇게 선언을 하고 그다음에 시작을 하구요 이렇게 선언을 하는 순간 

이사이즈가 이렇게 잡힙니다. 이 데이터타입에 따라서 잡히는거죠 어 배열에 중요한 특징중의 하나가 

물리적위치와 논리적위치가 동일하다. 라는 건데 음 배열을 보시면 이거는 자바에서는 할수 없는데 

씨언어에서 배열을 만들고 어드레스를 쭉 찍어볼수가 있어요 각 엘리먼트 요소들의 위치를 찍어볼수가 있어요

각 엘리먼트의 위치를 찍어보면 바로 인접해 있습니다. 이게 물리적위치랑 논리적위치랑 동일하다는게 

뭐냐면 A가 있고 A옆에 B가 있다. 라는게 논리적으로 그렇다라고 했을때 실제적으로 메모리에도 그렇게 있다.

이렇지 않은 자료구조도 있어요 나중에 말씀드릴지 모르는 링크드 리스트 같은 경우는 애가 A고 애가 B데

A다음에 B가 있다라고 하지만 실제적으로 메모리를 따라가 보면 애는 저쪽에 있고 재는 저쪽에 있고

논리적으로는 옆에 있지만 물리적으로는 실제메모리는 그렇지 않다. 근데 배열은 연속된 순차적인 순서를 가진 

논리적인 위치와 물리적인 위치가 동일한 그런 자료구조입니다. 그다음에 나중에 쓰겠지만 인덱스연산자라고 

해서 [  ] 대괄호라고 애기를 많이 할텐데 몇번째 배열의 이름이 arrayList[2]어레이리스트다 라고 하면 여기에 

두번째라고 이야기를 하는건데 배열에서 인덱스연산자를 쓸때 위치는 0부터시작을 합니다. 0부터 시작을 

해서요 맨마지막께 n개라고 했을때 마지막 엘리먼트의 위치는 n-1엔마이너스 일이 되겠죠 그죠

10개라고 하면 0부터 9까지 있는거에요 0부터9까지 있고 그러면 2라고 했을때 실제 2는 012세번째거죠

그럼 애를 배열의 특징중의 하나가 인덱스형성이 매우 빠르다라고 이야기를 하는데 빠른 이유는 뭐냐면 

배열의 이름은 주소에요 그니까 어레이리스트라고 했을때 애가 가르치는게 첫번째 위치가 되구요 

그리고 이게 두개다 그러면 인덱스가 두개인거 0번지 1번지 끝위치가 되겠죠 2번지의 엘리먼트를 

가져오면 됩니다. 그래서 애가 만약에 인티져다 8바이트를 건너뛰면 되구요 애가 더블이다.  더블은 

8바이트잖아요 그러니깐은 16바이트를 건너뛰면 되겠습니다. 그래서 그렇게 바로 산술적으로 첫번째

첫번째 어드레스에서 계산을 할수가 있어요 인덱스를 그래서 몇번째 요소를 꺼내오는데 배열은 굉장히 

빠릅니다. 배열은 빨라요 이게 인제 나중에 자료구조할때 링크드리스트랑 비교해서 말씀을 드릴텐데 

링크드 리스트는 이게 빠르지가 않아요 다 뛰엄뛰엄 있기 때문에 애를 쭉 찾아가거든요 요소만큼 시간이 걸립니다. 

요런게 배열이다. 라는거 요거를 배열에 특징중에 하나가 데이터가 중간에 없으면 안되요 그러니까 데이터가 

쭉 연결이 돼 있어야 하거든요 내가 이 중간에 있는 데이터를 뺄거다 아니면 여기중간에다 데이터를 넣을거다

라고 했을때 이게 인서트하고 딜리트하는 연산을 하게 되면 요 뒤에 있는 엘리먼트들이 조정이 일어나야 되요 

그래서 집어넣을거면 인덱스자리를 비워두고 애부터 하나씩 뒤로 밀구요 그다음에 뺄거면 그자리를 뺀다음에

애를 하나씩 이자리를 하나씩 댕겨주셔야할겁니다. 이런연산이 있거든요 근데 이게 인제 우리가 흔히 말하기를 

흔히 알고리즘에서 음 흔히 실행속도를 이야기를 하는데 요런경우에 Array같은 경우는 배열갯수에 디펜던트하게 

의존해서 오퍼레이션(연산)에 수행시간이들어간다라고 이야기를 해요 배열같은 경우는 중간에 데이터가 들어가거나

빠질때 수행되는 오퍼레이션시간이 있다. 라는거 어 그런데 요것들을 다 잘해서 구현해 놓은 ArrayList라는 애가 있어요

ArrayList는 자바 유틸 패키지 안에서 제공되는 배열에 객체배열을 구현해 놓은 클레스입니다. 요거를 우리가 많이 

쓸거거든요 그래서 일단은 배열을 어떻게 선언을 해서 쓰느냐 볼거구요 그다음에 배열을 보실때 이렇게 두가지 

자료형으로 우리가 살펴볼건데 하나는 기본자료형 프리미티브데이터타입이죠 int라든지 double이라든지 이런것들은 

몇바이트가 정해져 있죠 int를 10개를 잡는다 40바이트가 잡힐것이고 double을 10개를 잡는다 80바이트가 잡힐 겁니다.

근데 이런애들 말고 Student라든가 Employee라든가 이런애들도 배열로 잡을수가 있어요 그럼 이건 객체배열이죠 

그죠 객체배열 객체배열하고 기본자료형배열하고 사용하는게 조금 차이가 있습니다. 요것도 어떻게 되는지 전반적으로

이런내용을 저랑 같이 살펴보도록 하겠습니다. 

그럼 문법을 보시면 두가지 타입을 다쓰셔도 돼요 이렇게 앞에다가 데이터타입을 선언을 하고 배열이다. [ ]대괄호한다음에

그다음에 배열이름하고 몇개를 쓰겠다라고 하는데 여기다 new키워드를 쓰십니다. 이게 씨언어같은 경우는 new를 안쓰거든요

자바는 new키워드를 써요 그래서 요렇케 10개짜리 하면 말씀드린데요 4바이트짜리 10개가 잡히는거구요 40바이트를 쓰게 

되는거죠 0부터9까지 0부터9번째까지 잡힙니다. 밑에꺼처럼써도 돼요 밑에꺼처럼 써도 되는데 제가 강의할때 선호하는 

방식은 int[]가 자료형이라는 의미로 위에 방식으로 코딩을 하도록 하겠습니다. 초기화하는 방법이 있는데 이것도 이제 

수업교안을 보고 말씀을 드릴게요 요렇게 선언을 하고 int[] numbers = new int[]라는 이름으로 코딩을 할때 new인트라고

요렇게 쓰는데 바로 초기화를 이렇게 하시면 되요 초기화를 하시는데 []안에 갯수를 쓰질않습니다. 3이라고 쓰질않는다는 

말씀이에요 갯수 쓰지 마시고 어 아니면은 아래처럼 코딩하실수도 있어요 new를 아예안쓸수도 있어요 이거는 선언과 

동시에 초기화할때 이렇게 쓸수가 있습니다. 그죠 내가 먼저 선언을 해놓고 나중에 초기화를 한다라고 하면 그때는 

요렇케 반드시new 연산자를 쓰셔야 합니다. 문법이니까 약속이니까 그렇게알아두시면 되고  음 사용하는걸 보면 

이제 10개짜리 이렇게 잡았다. 요 예제는 뭐냐면 배열10개를 잡구요 1부터 10까지 쭉 넣어요 그리고나서 total을 

하나씩 하나씩 꺼내서 전체가 55가 나오게끔 하는거죠 이건 저랑 같이 코딩을 해볼텐데 여기서 배열의 요 속성인 

length랭스 자바에서제공해주는 모든배열에는 랭스속성 처음에 몇개짜리라고 선언해 준것 있죠 10개짜리 이게 

그게 되구요 그다음 인덱스연산자 값을 몇번째에다 값을 집어넣을수도 있고 그값을 꺼내올수도 있고 이렇케 해서 

사용할수가 있습니다. 요코드는 저랑 한번 해볼까요 자 패키지 kr.or.kh20강이죠 생성하고요 클레스작성하고요

ArrayTest 클래스작성하고 메인을 넣으시고 피니쉬 하시구요 10개짜리 int[] arr = new int[10];를 생성하시구요

그다음에 합을 구할거니까 int total = 0;  이니셜라이즈초기화를 해주시고 for(int i=0, num=1; i<arr.length; i++;){
System.out.println(arr[i]);
}

지금 배열을 쭉 만들었잖아요 배열을 new하면 초기값이 이니셜라이즈는 돼요 인티져같은 경우는 0으로 이니셜라이즈

가 되고 double 같은 경우는 0.0 그다음에 객체는 null로 이니셜라이즈가 됩니다. 초기화가 되거든요 i가 arr.랭스

랭스가 10이죠 그리고 i++ arr의 i번째를 출력을 해라 이렇게 해서 런을 해보시면요 다 명이 나와요 그러니까 이게

초기화가 된다는거죠 new라는 키워드를 쓰면 이내 초기화가 됩니다. 그냥 지역변수가 아니라 new하게 되면 초기화가

되구요 이제 여기다가 arr[i]번쩨 에다가 값을 넣을건데 넘을 하나씩 증가시키면서 넣을거에요 넘이 처음에 1이죠 

그다음에 여기다 ++를 넣으면 어떻게 되겠어요 어 값이 뒤에 있으면 에전에 했던거 다시 생각해 보면 이게 ++이

뒤에 있으면 값을 넣고 나서 그다음에 증가시킨다고 했죠 처음엔1,2,3,4,쭉 카운트할겁니다. 이게 들어가구요

arr[i] = num++; arr.lenght를 보면 length가 10이되는데 우리가 0부터9까지다 라고 하면 이렇게 잘안쓴다는 거에요

i<=9 요런기호는 많이 쓰질않아요 0부터 9까지면 요렇게 많이 씁니다. i<10 이렇게 많이 쓰는 이유는 이제 애가 

0부터 갯수가 나타내게 되는거죠 10번이 반복이 되는구나라는거를 요기서 보실수가 있습니다. 그래서 요렇게 하구요

arr.length 어레이에서 아까 말씀드렸듯이 랭스라는 속성이 있으니까 arr.length 요렇게 많이 쓰시면 됩니다. 그러면 애가

인제 12345678910 이렇게 들어가 있겠죠 그래서 애를 다 더해 볼게요 다 더하는데 어 for문을 이렇게 돌리는 경우도 

있구요 그다음에 이네스트for라고 해서 향상된 for문이라고 해서 이건 언제쓰냐면 처음부터 끝까지 돌때 써요 처음부터

엘리먼트에 제로엘리먼트부터 n-1번째 엘리먼트까지 쭉 순회할때 쓰시면 됩니다. 그럼 어떻게 쓰냐면 앞에다가 이 

엘리먼트에 해당되는 데이터타입의 변수를 선언하구요 :땡땡한다음에 뒤에다가 배열이름 이렇게 써주면 돼요 

나중에 요 이네스트포 많이 쓸거니까 요렇게 하시구total토탈에다가 더해 주시면 돼죠 total += num; 넘을 이렇게 

해주시면 이 넘에 순차적으로 값이 쭉 들어가요 이게 이네스트포거든요 향상된포문 이걸 많이 사용을 합니다. 

어 말씀드렸듯이 처음부터 for까지 다 쓸때 하는거고 중간에 뭐 잘른다거나 i같은 인덱스연산을 핸들링을 해주셔야 

겠죠 근데 그렇지 않고 처음부터 끝까지 쭉 0부터 n-1까지 쓴다라고 하면 이네스트포를 많이  씁니다. 

System.out.println(total);을 출력하셔야 겠죠 실행해서결과를 보시면55가 나옵니다. 인덱스연산자 처음에 배열 

선언하는거 for(int i=0 ...)요거하기 싫으시면 두줄을 주석처리하시고 선언할때 바로 int[] arr = new int[]{1,2,3,4,5,6,7,8,9,10};

이때 10이라고 쓰진 않는다. 요렇게 해놓고 실행을 해보시면 이것도 55가 나오죠 초기화를 직접하셔도 되고 아니면 

for문을 통해서 하셔도 됩니다. 네 배열의 길이 length를 쓰시는데  요소의 갯수가 동일하지 않는다가 뭐냐면요 

처음에 우리가 배열을 10개를 잡잖아요 이 10개를 다 꽉차게 쓰지를 않는거죠 가령 100개를 잡았다 그러면 그런데 

100개를 다 않쓰고 50개만쓰는경우도 많이 있습니다. 자 그럼 50개만 쓰는 경우도 있는데 자 이제 랭스라는 속성을

무조건 가져다가 코딩을 하다보면 오류가 생길수도 있어요 가령 여길보시면 어 더블로 5개를 잡았다는거죠 

그리고선 값을 이렇게 쭉 넣었어요 dArr[0] = 1.1; dArr[1] = 2.1; dArr[2]=3.1; 그리고선 내가 뭐를 하고 싶냐면 애네들의

곱을 구하고 싶다 곱한값을 근데 이걸 포를 돌리는데 이네스트포를 돌려고 안돼고 인네스트포는 처음부터 끝까지 다 

돈다고 했죠 그다음에 요렇게 랭스를 돌리면 System.out.println(mtotal);이 토탈값이 0이 나와요 그러면은 말씀드렸듯이

그럼 애네들은 0.0으로 이니셜라이즈가 됐고 데이터는 세개뿐이 안들어갔죠 곱해버리면 당연히0이나오겠죠 

0의 값을 곱했으니까 그래서 이런경우는 어떻하냐면 배열의 요소의 갯수에 대한 카운트변수를 따로 두시는거에요

네 랭스를 무조건 쓰시는게 아니라 배열을 쓴다고 해서 요렇게 카운트변수를 두고 그다음에 이카운트변수까지 돌리는거죠

지금은 세개만 들어가 있으니까 요렇케 돌리시면 우리가 원하는 답을 얻을수 있다. 이거도 같이 코딩을 해보겠습니다.

어 문자도 배열을 코딩할수 있어요 그래서 문자같은 경우 어떻게 하는지 저랑 같이 코딩해보겠습니다.

바로 밑에 향상된 포문에 대해서 말씀을 드렸죠 그래서 for하고(변수쓰시고:배열)옆에다가 쓰시면 됩니다.

n개요소를 0부터 n-1까지 쭉 순차적으로 순회할때 사용을한다. 문자에 대한 사용하는 거를 같이 해보도록 하겠습니다.

자 클레스만들까요 CharArrayTest 메인넣으시고 피니시한다음에 대문자만 한번 쭉 넣어볼게요 char[] alphabets = new char[26];

총 26개죠 26개 선언하시구 char ch = 'A'; 부터해서 쭉 넣을게요 for(int i=0; i<alphabers.length;i++){ 
   alphabers[i] = ch++;
}

증가를 시키면 처음에 65, 66,67 해가지구 하나씩 들어가겠죠 문자도 정수라고 말씀을 드렸고 잘들어갔나 확인해 보기 위해서

for(char alpha  : alphabers){
    System.out.println(alpha+","+(int)alpha);     
}

처음부터 끝까지 돌릴거니까  해서 실행을 해보시면 A부터 Z까지 쭉 잘나오는걸 보실수가 있습니다. 기본자료형들에 대한 

배열을 한번써 봤어요 써 봤구요 아직 객체배열을 안써봤죠 그래서 다음강의에서는 객체배열을 같이 써보면서 기본데이터

타입하고는 어떤 차이가 있는지 살펴보도록 하겠습니다. 

