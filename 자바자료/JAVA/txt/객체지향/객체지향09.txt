네 이번시간에는 참조자료형 변수라는 주제로 말씀을 드릴텐데 쉽게 말해서 예전에는 int float String도 쓰긴 했어요 

스트링은 jdk에서 제공해 주는 객체이긴 한데 그런것들을 주로썼는데 직접 클레스를 만들어서 개를 멤버변수로 사용

해보고싶다. 라는거죠 그렇게 많이 사용을 하구요  변수의 자료형을 지금까지 보시면 애네들은 int long float double

처음에 배웠던 프리미티브 데이터타입 기본자료형이라고 하구요  그다음에 참조자료형 오브젝트형의 객체타입의

데이터타입이죠 String Date Student 우리가 만든 스튜어던트 학생객체 이런것들이 들어갈수 있습니다.

당연히 우리가 만드는 클레스들도 객체변수의 자료형으로 객체변수의 객체자료형으로 사용할수 있는 거죠

클레스형으로 변수를 선언한다. 기본자료형은 사용하는 메모리의 크기가 정해져 있지만 참조자료형은  클레스마다 

다르게 돼있죠 참조자료형을 사용할 때는 해당변수를 선언을 하고 그냥쑬수는 없어요 왜냐면 애도 객체이기 때문에 

그래서 애는 생성을 하셔서 쓰셔야 됩니다. 지금까지  우리가 했을때 스트링같은 경우는 생성안하고 썼거든요 

애는 내부적으로 좀 예외적인 상황이 있는거구요 앞으로 우리가 어떤 객체를 변수로 사용해서 쓴다. 라고할때 대부분을

개를 생성을 해서 사용을 해야 됩니다. 어 요 애기는 이젠 제가 참조자료형의 필요성과 그다음에 클레스를 만들때 

클레스에 어떤 아이덴티티 유일성 그 클레스의 역활에 충실하게 클레스를 만들자 라는거를 같이 설명을 드리는부분이거든요

음 이게 쪼금 어려울수도 있지만 또 생각을 해보면 요게  중요한부분이기도 합니다.

그래서 같이 한번 애기를 해보도록 할게요 이제 어 학생이있어요 그래서  학생이 수강과목들이 있는데 이과목들의 성적을 

산출하기 위해서 우리가 한번 프로그램을 한번 만들어보자 이미 시스템이  있겠죠 근데 성적을 산출할거란 말이죠 

어 근데 그러면 이 학생이 수업을 들었으니까 이성적에 대한 부분을 그러면 모두 학생의 요소로 놓을거냐 라는거죠

그래서 여기보면 근데 학생이 있을때 학생이 수업을 두개를 들었어요 학번이랑 이름이랑 요소로 놓구요 그다음에 

국어수업을 들었다는 거죠 국어에 대한 스코어 koreaScore 를 넣고 수학에 대한 스코아도 넣었다는거죠 mathScore

여기까지 넣고서 할라구 보니까 과목에 대한 이름도 정보로 넣어야되죠  그래서 koreaTitle mathTitle 이라고 넣었다는 

거죠 근데 학생이 여러명이잖아요 이학생은 요것만 들었는데 어떤학생은 10과목을 들은 거에요 그학생을 위해서 

클레스를 만들고 그 클레스에 10개의 과목에 대한 성적과 이름에 대한 20개의  프로퍼티를 놓고 근데 이중에 어떤

학생은 두개만 듣고 어떤 학생은 10개를 듣고 어떤 학생은 5개를 듣고 뭐이렇게 되는거죠 딱봐도 불합리한 클레스의

구조라는거를 이해하실수가 있겠죠 그래서 이런경우에는 학생에 대한 클레스에서는 학생에 대한 내용만 넣고 

그 다음에 요런부분은 과목에 대한 애기거든요 그래서 과목이라는 클레스 Subject라고하면 좋겠죠  Subject라는 

클레스로 분리를 한다음에 이서브젝트라는 클레스안에 과목클레스안에 나열을 하는거에요 뭐 과목이름도 있고 

점수도 있고 과목코드도 있고 Code 그다음에 과목시수이런것들도 있을수 있겠죠 이런내용은 이 과목안에다가 

넣는거죠 이 학생이 수강하는 과목은 어떻게 하느냐 학생객체안에 넣으시면 됩니다. 이 과목의 갯수는 여러개일수

있죠 어 이과목의 갯수가 여러개인것들도 문제가 되지 않냐 이럴때는 우리가 나중에 배우겠지만 배열을 배울겁니다.

배열에다가 넣으시면 돼요 근데 우리는 아직 배열을 안배웠으니까 두과목정도 넣게 되겠다라는 거죠 요렇게 구별을 

하면 이과목이라는 애에 데이터타입은 Subject가 되는거죠 요렇게 만들면 좋다라는겁니다. 우리가 어떤 클래스를 

만들때 그 클레스를 단독으로쓰는 경우들도 있지만 오브젝트오리엔티드프로그래밍에서는 클레스간에 인터렉션이

당연히 일어나구요 그다음에 협업 콜라보레이션이 일어나고 그 클레스를  내가 포함해서 컴포지션한다고 하거든요 

포함해서 사용을 하기도 합니다. 그런 여러가지 일들이 클레스간에 같이 일어나는거구요 지금의 경우는 이 Subject

라는 클레스를 학생쪽에서 변수로 가져다가 쓰시면 된다. 라는거죠 자 밑에 예제를 보시면 일단 두과목만 요렇게 

해놨습니다.  Subject korea; Subject math; 두과목만 해놨구요 학생이 어떤 이름과  id를 가진 학생이 이두과목을 

배우는데 말씀드렸지만 String 은 예외에요 스트링은 반드시 new하지 않으셔도 사용하실수가 있습니다.

스트링은 예외적으로 반드시 new 하지 않으셔도 사용하실수가 있지만 나머지 클레스로 정의된 변수들은 

이렇게 생성자에서 new를 하던가 그전에 new 를 하던가 한번 new를 하고 나서 쓰셔야 되요 new Subject(); korea

new Subject(); math 국어수학 과목이렇게 만드셔야 되고 Subject클레스를 잠깐 보시면 서브젝트 클레스에는 

서브젝트이름 과목이름 score 과목점수 subjectID과목아이디가 멤버변수로  들어가 있다. 그래서 저희가 해볼거는 

이 학생이 국어랑 수학을 들었고 그다음에 그애 성적이 나왔어요 그래서 그성적이 합계 총점이 몇점이다 라는거를 

출력하는 이런거를 같이하는 프로그램을 해보도록 하겠습니다. 

이클립스를 여시고 이코드는 저화함께 해보도록 하시죠

자 9장이죠 패키지 kr.or.kh09하시고

그다음에 먼저 만들거는 서브젝트를 먼저 만들어볼까요 Subject라는 클레스가 있고

String subjectName; int score; int subjectId; 요렇게 넣었습니다. 그리고 학생이 이수업을 들을거죠 

class Student 클레스를 작성하시고 스튜어던트에도 속성을 너무 많이 느면 너무 많이 느면 우리가 코딩하기 좀 힘드니까

두개만 넣을게요 int studentId; 그다음에 String studentName; 이학생의 수강과목 서브젝트 Subject 말씀드렸지만 

나중에 서브젝트가 많아지면 배열로 써요 배열로쓰는데 우리 배열 아직 안배웠으니까 두개만 쓰도록 하겠습니다.

Subject korea; Subject math; 쓰시구요 생성자 Student(int studentId, String studentName){

this.studentId = studentId; this.studentName=studentName; 서브젝트를 그냥쓸슨없어요 이거는 선언된 거구요 

실제적으로 요값은 korea는 4바이트뿐이안돼요 애주소를 가르칠려고하는 변수니까 그래서 korea인스턴스를 생성을 

하셔야 돼 korea = new Subject(); math = new Subject(); 를 하셔야 됩니다. 그래서 대부분은 생성자에서 생성을 

많이들 해요 참조변수로 멤버변수를 참조자료형으로 멤버변수를 쓰는경우 그런데 생성자에서 안할수도 있거든요 

아무튼 korea,math국어수학을 사용하기전에 사용하셔야 됩니다. 안그러면 null포인터익셉션나서 오류가 떨어집니다.

그래서 public void setKoreaSubject(String name,int score){   
   korea.subjectName = name;
   korea.score = score;
}
멤버변수에 대한 세팅을 하구요 

public void setMathSubject(String name,int score){
  math.subjectName = name;
  math.score = score;
}
국어와수학을 몇점을 맞았느냐 요거를 여기다가 셋팅을 한거구요 총점을 계산을 해서 보여주면 되겠죠 

public void showScoreInfo(){
  int total = korea.score + math.score;
  System.out.println(studentName +"학생의 총점은"+total+"점입니다.");
}

여기까지 코딩을 다 하셨으면 이렇게 하시고 저장을 하신다음에 한번씩 다른클레스가 저장이 안된경우도 있습니다. 

클레스레퍼런스가 쓸때 오류가 같이 나는 경우가 있어요 그때는 세이브올을 한번 해주세요

class SubjectTest클레스를 생성한다. 메인작성하시고 Student studentLee = new Student(100,"Lee"); 

studentLee.setKoreaSubject("국어",100); studentLee.setMathSubject("수학",90); 

Student studentKim = new Student(200,"Kim"); 

studentKim.setKoreaSubject("국어",100); studentKim.setMathSubject("수학",90);

studentLee.showScoreInfo(); studentKim.showScoreInfo(); 실행해보시면 Lee학생의총점은 199점입니다. Kim학생의 총점은 115점입니다.

자 여기서 여러분이 생각하실 부분은 뭐냐 멤버변수의 참조자료형을 멤벼변수의 참조자료형을 만든것들을 가져다가 써서 할수

있다. 그런데 참조자료형은 new 연산자의 생성해서 쓰셔야 한다. 참조자료형으로 분리를 하는게 좀더 이 각각 객체에 대한 

역할과 기능을 분명하게 하는 부분이 있다. 이게 약간 데이터베이스하고 연관이 돼 있긴 하거든요 거기까지 말하기는 길구요

자꾸이것도 연습을 하셔야 합니다. 요렇게사용할수있다는걸 말씀을 드렸습니다. 