버스와 지하철을 타는 예제를 프로그래밍해보도록 하겠습니다.

예제가 조금 길수도 있는데 천천히 코딩을 하면서 같이 코딩을 하면서 애는 좀 좋으니까 코딩을 하면서 설명을 

드릴게요 예제는 이런거에요 제임스와 토마스는 가각 버스와 지하철을 타고 학교에 갑니다. 제임스는 5천원을 

가지고 있었구요  100번버스를 타면서 1000원을 지불할겁니다. 토마스는 10000원을 가지고 있었고 초록색 

지하철을 타면서 1200원을 지불을 합니다. 버스가 이거보다 좀 비싼데 이렇게 하겠습니다. 두 학생이 버스와

지하철을 타는 상황을 구현해서 나중에 정보를 남겨놨으면 좋겠어요 제임스의 남은 돈은 얼마입니다.

토마스의 남은 돈은 얼마입니다.  100번버스의 승객은 한명이 늘었고 수입은 얼마입니다. 2번지하철의 승객은 

그린라인이네 2번지하철의 승객은 한명이고 수입은 얼마입니다. 요런식으로 출력이 되게끔 이렇게 코딩을 

해보겠습니다. 자그러면 우리가 학생부터 코딩을 해보도록 하죠 이클립스여시구요 패키지를 생성합니다.

패키지이름을 kr.or.kh14로 생성하겠습니다. class Student죠 학생속성을 생각을 해보시면요 

String studentName; 이름이 있구요 돈가지고 있었죠 머니 int meney; 요두개만 해보죠 그리고 나서 학생

컨스트럭터를 한번 만들어볼까요 public Student() 생성자도 앞에 안쓰시면 디폴트라고 패키지내에서 접근가능

합니다. public Student(String studentName, int money){
   this.studentName = studentName;
   this.money = money
}

학생한명이 생성이 되면 그학생의 이름과 얼마를 가지고 있다. 그렇게 하구요  학생이 버스를 타요  

그거를 테이크버스라고 하겠습니다. public void takeBus() 그렇게 하고 이학생이 어떤 버스를 탔는지가 

매개변수로 넘어옵니다. public void takeBus(Bus bus){  } 아직 버스는 안만들었으니까 버스는 빨간줄이 났구요

이렇게 됐으면 이버스를 탔다 라구요 탔을때 얼마를 지불할거냐면 bus.take(1000)원을 지불할거에요

이 천원은 줬구요 그다음에 나의돈은 this.money -= 1000; 천원이 줄어들어야겠죠 그죠 

public void takeBus(Bus bus){
   bus.take(1000);
   this.money -= 1000;
}

어 지하철타는것도 마찬가지겠네요 public void takeSubway(Subway subway){
     subWay.take(1200);
     this.money -=1200;
}이 친구가 탄 이렇게 메소드가 제공이 됐고 버스를 탔을때는 takeBus가 호출이 되면 되고 지하철을 탔을때는 

takeSubway가 호출이 되는거에요 이게 뭐 순서대로 호출이 되는게 아니라 그 필요할때 메소드가 호출되는 방식

인거죠 애의 기능들은 이것들을 제공을 해주고요 그리고 나서 학생의 정보를 아까 출력결과를 두기로 했잖아요

public void showInfo( ){
   System.out.println(studentName +"님의 남은돈은"+ money+"원 입니다.");
}
자 요렇게 출력을 했습니다. 이게 이렇게 했구요 그다음에 버스하고 서브웨이하고 안만들었고 버스와 서브웨이의 테이크를 

만들거에요 테이크를 불러서 여기다 천원을 줬죠 요금입니다. 일단 버스를 먼저 만들어보도록 하죠 

class 버스  Bus클레스생성 보시면 버스는 아까 속성이 머가 있었냐면 버스넘버 int busNumber; 승객수 패신저카운트 

int passengerCount; 그다음에 수입이죠 int money;돈을 이렇게 좋습니다. 버스의 기본생성자는 

public Bus(int busNumber){
    this.busNumber=busNumber;
}
승객수랑 돈은 초기값이 있을수 있는데 승객들은 처음부터 한명도 없으니까 한명씩 탈때마다 늘어날테니까 

요렇게 하구요 아까 테이크라는 함수를 만들건데 take(int money){
   this.money += money;
   passengerCount++;
}
이돈은 학생이 지불한 돈이에요 학생이 이버스에 대한 테이크함수를 부르면서 협력이일어난거죠 거기서 객체 협력이 

일어났고 테이크를 부르면서 거기서 천원을 줬단 말이죠 그러면 여기에서는 this.money돈이 늘었을거구요 그죠

그 다음에 이테이크라는 메서드를 불러서 천원을 줬다는 애기는 패신저카운트가 늘었다는 거죠 이게 버스탄거 

이게 바로 협력이 되는 그런 메서드가 되는거죠 그리고 쇼버스인포해서 버스번호 넘버 번의 승객수는 패신저카운트

명이고, 수입은 money머니 원입니다. 잠깐 살펴보시면 스튜어던트에서 버스가 매개변수로 넘어왔어요 어떤 버스를 

탔다. 넘어왔고 그버스  인스턴스에 대해서 테이크라는 함수가 불렸습니다.  ctrl눌르시고 테이크함수이름이렇게 

눌르시면 테이크메서드로 가죠 그래서 ctrl눌르시고 이렇게 하시면 돼요 애가 돈을 받아서 자기의 돈을 ++증가하고

패시저카운트도 증가했죠 협력이 콜라보레이션이 일어나는거를 확인하실수가 있습니다. 서브웨이도 마찬가지죠 

이게 좀 비슷하기 때문에 제가 여러분은 직접 다 코딩을 하세요 Subway클레스를 작성하시고

public class Subway{

   int lineNumber;
   int paswngerCount;
   int money;

   public Subway(int lineNumber){
    this.lineNumber = lineNumber;
   }
   public void take(int money){
   this.money += money;
   passengerCount++;
   }
   public void showBuwInfo(){
    System.out.println();
   }
}

클라이언트테스트클레스를 생성한다. TakeTransTest클레스를 생성한다. 메인작성하고 피니시하겠습니다.

버스를 문제를 한번 다시볼까요 

제임스와 토마스 두친구가 있었고 제임스는  버스를 타고 토마스는 지하철을 탄다고 그랬죠 

제임스는 100번버스를 타고 토마스는 초록색 지하철 2번라인을 탄다라고 했습니다. 

그래서 Student studentJ = new Student("James",5000); 5천원이있었어요

          Student studentT = new Student("Tomas",10000); 만원이있었어요
   
         버스하고 지하철이 두대가 있었는데 Bus bus100 = new Bus(100);

         그리고 나서 studentJ.takeBus(bus100);를 했어요 뭐를 탔냐면 버스100이죠

         버스는 여러대가 있을수 있어요 Bus bus = new Bus(500); 버스는 여러대의 버스가 있을수 있는데

         이중에서 인스턴스로 넘어간 객체는 Bus bus100 = new Bus(100); 이라는 거죠 스튜어던트에 

          100번버스를 탔다는 겁니다. 네 탔으면 take테이크버스안에서 요금이 지불되고 승객수가 늘어나고

          이런일들이 다 일어나죠 테이크버스로 가보면 버스에서 테이크가 일어나고 돈이다 지불되고 이런

일들이 일어납니다. 객체협력이 다 일어나는거에요 그죠 그리고 나서 자 지하철또 탔죠 

Subway greenSubway =  new Subway(2); 그다음에 스튜어던트티가

studentT.takeSubway(greenSubway); 서브웨이도 뭐 여러개가 있을수 있죠 파란라인도 있고 빨간라인도 있고

그린라인도 있고 막 있잖아요 그래서 그중에서 그린라인을 탄거구 이렇게 해가지구 여기까지 했으면 

두 학생이 만들어졌고 버스타고 지하철탄게 다 구현이 됐어요 각 학생에 대한 정보를 showInfo

studentT.showInfo();
studentJ.showInfo();

bus100.showBusInfo();
greenSubway.showBusInfo();

실행을 해보면 제임스님의 남은 돈은 4000원입니다. 버스타는데 섰고 토마스님의 남은 돈은 8800원

100번 승객수는 1명이고 수입은 1000원 2번승객의 수는 한명이고 수입은 1200원입니다. 여기 아까 

버스만들고서 아무것도 안했잖아요 bus500.showBusInfo(); 해주면 500번의승객수는 0명이고 수입은

0원입니다. 이제또 누가 타면은 이버스를 타게 되면 그때는 늘어나겠죠 네 이런식으로 코딩을 하실수가

있습니다. 그래서 객체지향프로그램으로 코딩을 할때는 각 객체에 대한 서로간에 관계 협력 콜라보레이션

이라고 애기를 하거든요 그래서 협력이 이루어진다. 그 협력을 바탕으로 코딩이 이루어진다라는거를 

여러분에게 말씀을 드렸습니다. 

 