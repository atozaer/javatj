
이번 챕터투부터요 제가 중간중간에 여러분에게 복습해보자는 의미로 문제 과제 이런걸 하나씩 넣어놨습니다.

어 이제 객체를 우리가 배웠구요 객체를 생성하는것 까지 말씀을 드렸잖아요 그래서 이런 디스크립션이 있을때

우리가 항상 이제 시스템을 설계한다거나 서비스를 만든다거나 펑션을 만들때 보면 그 요구사항이 쭉 있어요 

그럼 요구사항들을 보고 이안에서 오브젝트를 뽑아내고 그다음에 오브젝트들이 어떤 역할을 할것인가 

어떤기능을 제공할것인가 이런 것들을 고민을 하잖아요 그래서 간단하게 이런것들을 보시고 아 이건 어떻게

객체를 만들면 되겠고 어떤 속성이  있으면 되겠다. 그런것들을 제공을 한번해보시길 바랍니다.

키가 180이고 몸무게가 78킬로인 남성이 있습니다. 이름은 TOMAS이고 나이는 37세입니다.

요렇게 돼 있는데 이거에 대한 객체를 뽑아낼때 제가 가끔이젠 오프라인 수업을 강의를 하고

그러면 학생들이 요런경우에 클레스이름을 토마스 이렇게 쓰는경우가 있어요 그건 좋은 생각은 아니죠

왜냐면 클레스라는 거는 오브젝트의 청사진이다. 블루프린트라고 말씀을 드렸고 왠만하면 가장 추상화되고

제너럴이름으로쓰시는것이 좋습니다. 여기는 남성이 한명인데 나중에 여성이 또 생길수도 있고 여러명의 

사람이 들어올수 있잖아요 그래서 이런경우에는 펄슨이라든가 이런 제너럴이름으로  쓰셔서 여기있는 속성들을

쓰셔서 키가 있고 몸무게가 있고 젠더 남성이라는 그런 속성도 있고 이름도 토마스고 나이도 있습니다.  

이런요소들을 속성으로 넣고 그다음에 요문장이 그대로 출력되도록 showInfo나 이런것들 지금까지 

만들었잖아요 메서드를 만들어봤잖아요 그래서 그런것도 한번 해보시면 좋을것 같습니다.

어 다음에는 우리가 요새 배달앱 많이 쓰죠 배달에 주문이 들어왔어요 주문이 들어온걸 가정으로 해서

물론 주문이 들어왔을때에 사용되는 오브젝트는 훨씬  복잡할겁니다. 근데 우리는 딱 오더에만 집중을 해서

생각을 해볼게요 가계나 이런것들은 좀 빼고 그래서 주문번호 주문번호같은 경우는 이젠 그때그때마다

좀 다른데요 어떻게 이제 그 주문번호를 어싸인 할것이냐 로직은 다르지만 어째든 그 주문번호라는거는 

유일한 키가 되야 겠죠 지금은 날짜에다가 시간에다가 요정도만 넣는데 대부분은 그가게에 필요하다라고 

하면 그가게에 번호 그다음에 타임스탬프를 좀더 명확하게 밀리세컨드까지  넣을수도 있구요 그래서 이숫자가

주문접수번호가 유일한 식별자가 되도록 만드는게 중요하구요 그 다음에 핸드폰번호 지금은 그식별자를 

제너레이터하는게 아니라 요런번호가 들어왔다. 핸드폰번호 주문자핸드폰번호 주문자 집주소 언제주문했는지 

시간이 언제인지 요것도이어서 쓸수도 있구요 제가 일부러 나눴습니다. 주문한 가격 메뉴번호 뭐 요정도 해가지고

인제 오더라는 푸드오더라던가 오더라는 클레스를 만들고 거기에 프로퍼티들을 정의하구요 이거는 생성자를 한번

만드셔가지고요 생성자에서 입력을 받으셔가지고요 입력받은 내용으로 객체를 만드시고 요런포맷으로 출력을 해보는 

네그런거를 한번 해보시기 바랍니다. 여기에 부족한  속성들도 있죠 그런데 지금은 간단하게 한번 해보시고 여러분이 

추가하고 싶은 속성이 있으시다면 더 추가를 해보시고 그렇게 해서 객체를 직접 만들고 그 객체를 테스트하는거를

한번 해보시구요 또하나 말씀드릴거는 뭐냐면 지금까지 어떻게 코딩을 했냐면 이렇게 Student학생객체를 만들고

그 객체를 활용하는  쪽에 코드를 따로 만들었습니다. 이 클라이언트 쪽 코드를 따로 만들었는데 StudentTest클레스를 

따로 만들었는데 여러분들이 이제 이거는 참고적으로 말씀을 드리는건데 저는 이렇게 계속 코딩을 할거지만 가끔 보시면 

책이나 다른교재나 이런거를 보시면 학생객체에 직접 메인을 넣는 경우들이 있어요 public static void main(String[] args){  

Student student = new Student(123,"test",1); 만들수도 있습니다. 만들수도있는데 System.out.println(student.showStudentInfo()); 네이렇게 

하면 이거는 어떤 차이냐면 Student 가 객체이자  구동하는 메인코드까지 들어가있는거에요 run을 해보시면 
} 출력이 되죠 근데 제가 요방법으로 여러분들한테 강의를 안드리는 이유는 이게 좀 햇갈립니다. 

그래서 학생들이 생각하기에는 객체를 만들면 그안에 꼭 메인이 있어야 되느냐라고 생각을 하는경우들도 있구요 

그다음에 이 메인은 메서드라고는 성격이  다른 이 클레스를 구동하기 위한 함수인데 기본적으로 제공되는 함수니다. 

이게 메인이 구동클레스가 돼요 시작클레스라고 이야기를 하는데 요 학생클레스자체가  객체클레스임과 동시에 

시작클레스가 되는거죠 요런 메인이 들어간 구조로 코딩을 하다보면 여러분이 메인이 되게 중요한 애라고 오해를 하시고

또하나는 스튜어던트를 메인안에서 생성을 하니까 요것도 굉장히 햇갈려하시더라구요 그래서 제가 메인함수는 뺐습니다.

요런식으로는 저는 수업은 안하구요 학생클레스는 학생객체 역할만 하는 클레스로 우리가 만들거고 학생객체를 갖다 

쓰는쪽은 따로 만드는 거에요 그래서 요기다 이렇게 StudentTest클레스를 계속 따로 만들고 있죠

요런구조로 저희가 프로그램을 하는 이유는 학생클레스에 요렇게 하는이유는 굳이 테스트코드를 따로 만들거나 

그럴 필요가 없고 문법만 연습을 하기 위해서 그렇게 하는경우는 그렇게 많이 해도 돼요 해도 되고 저는 가끔을 

그렇게 슬수도 있습니다. 쓸수도 있는데 기본적으로 객체는 클레스만드실때는 클레스는 클레스의 역할이 있구요 

그 역할에 충실하게 클레스의 역할에 맞게 만드시는거고 애를 사용하는 코드는 우리가 웹페이지나 이런데로 만들면 

메인이 필요없어요  왜냐면 객체 웹페이지나 아니면 웹 핸드폰 핸드폰에서 만들어서 넣으면 이게 서버로 가잖아요 

그래서 실제로 그 객체를 쓰고 하는거는 서블릿단위나 웹서버의 스레드가 구동이 되면서 이렇게 만들어지기 때문에

사실은 메인이라는 에는 그쪽엔 서버쪽엔 없습니다. 메인이라는거는없구요 그래서 여기 콘솔상에서 우리가 메인으로

지금 웹서버가 없고 객체는 돌려봐야 되고 그러니까 메인이라는 그 시동해주는 run을 시켜주는 스태딕메소드를 이용해서

돌리는거다 라는 거를 이해해 주셨으면 좋겟습니다.자그래서 우리가 생성자까지 말씀을 드렸고 여러분이 여기까지  배우신

내용을 복습을 잘하시면서 한번 직접 만들어보셨으면 좋겠습니다.  