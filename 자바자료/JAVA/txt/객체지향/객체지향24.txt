아 요번강의는요 우리가 ArrayList 배열을 봤잖아요 그러고 이장의 챕터투의 마지막강의가 되는데

음 하나의 예제를 두고 그거를 차근차근 같이 만들어보도록 하겠습니다. 이거를 과제로 드리기에는 

조금 무게감이 있어서 같이 살펴보면서 이제 좀더 많은 소스의 양과 뒤에 다형성이나 뭐 상속 이런

것들 이야기하면 복합적인 요소들을 더해서 우리가 코딩을 할거에요 그래서 그런거에 대한 그런거에

대한 시작으로 어레이리스트를 활용해서 음 클레스여러개 만들어서 한번 해보도록 하겠습니다.

예제는 뭐냐면요 학번 1001학번 Lee와 1002학번 김 두학생이 있습니다. Lee학생은 국어 수학

두과목을 수강했고 김학생은 국어수학영어 세과목을 수강했네요 Lee학생이 국어100점 수학 50점

맞았구요 kim학생은 국어 70점 수학85점 영어100점 맞았습니다. 음 Student클레스 만들고 그다음에

서브젝트 클레스 만들고 ArrayList 활용해서 두 학생의 과목과 총점을 출력하세요 맨밑에 보시면 

제가 출력예를 이렇게 나눠드렸고 넣어놨구요 내가 한번 해보겠다 싶으신 분은 요거를 바탕으로 

그죠 스튜어던트테스트 코드를 여기에다 넣으시고 스튜어던트와 서브젝트를 만들어가는 이런

과정을 한번 해보셨으면 좋겠어요 그럼 괜찮을것 같구요 난 잘 자신이  없다. 이해가 잘안된다 그러면 

저랑 한번 쭉 해보시고 그다음에 혼자 한번 해보시는게 좀 괜찮겠죠 어째든 따라할때는 다 알것 같지만 

실제적으로 혼자하면 키보드에서 손이 안움직이는경우가 많이 있습니다. 그러니까 같이 해보실때 

해보시고 그다음에 답 없애고 혼자 한번 해보시는 이런 과정을 한번 겪어보시면 좀 자신감이 

생기시겠죠 자 우리전에 그 참조자료형 공부할때 뭐했어냐면요 어 챕터 9장이었을텐데 여기 

스튜어던트 있었구요 이스튜어던트가 어떤 과목을 수강한다라고 했을때 서브젝트클래스로 좀

빼서 서브젝트 클래스에 SubjectName하고 점수 이렇게 두자라는 이야기를 했었어요 근데 

생각을 해보면 이서브젝트가 점점 더 늘어날수 있다는 애기죠 그죠 서브젝트가 어떤학생은

두개를 들을수도 있고 어떤과목은 10과목을 들을수도 있고 다 다릅니다. 그래서 어떻게 했으면 

좋겠냐면 이서브젝트를 어레이 형식으로 배열형식으로 학생이 가지고 있는거에요 자기가 

수강하는 과목을 물론 이게 좀 크게 프로젝트가 되면 좀더 다른방식으로 좀더 효율적으로

요 클래스를 연관시킬수도 있는데 지금은 요렇게 학생이 자기가 수강하는 과목을 클래스안에

가지고 있는데 요번엔 우리가 배열을 배웠잖아요 배열로 한번 가지고 있어 보겠습니다. 

저번에 만든 스튜어던트 클래스를 가지고 올까요 다 코딩하는 좀 그러니까 패키지 하셔서

kr.or.kh24 만드시고 스튜어던트클래스를 복사하셔서 가지고 오세요 가지고 오시고요 그다음에

서브젝트는 아직 안만들었져 그죠 서브젝트에 대해서  오류가 나고 있는데 서브젝트 클래스도

만듭시다.  클레스이름 Subject 클레스작성 지금 간단하게 private String name; private int scorePoint;

멤버변수의 get/set 함수제작하고 스튜어던트클래스로 와서 set함수를 삭제하고 저번하고는 생성자함수

에 korea math를 좀삭제하고 생성자안에서 학생멤버변수도 필요없습니다. 과목클래스의 국어수학을 삭제

자 요런상태에서 우리가 이학생이 수강하는 과목을 배열로 가지고 있죠 ArrayList<Subject>라고 선언을 하는게

좋겠죠 subjectList; 선언을 하시구요 임포트가 됩니다. 자그래서 여기서 바로 new하셔도 되고 그다음에 

생성할때 new하셔도 돼요 subjectList = new ArrayList<>() 제네릭에다가 안넣으셔도 된다라고 했죠

넣으셔도 되고 안넣으셔도 됩니다. 자 만들었구요 그다음에 애가 어떤 과목을 수강을 하면 그 수강한 

과목을 요 리스트에 수강했다는 정보를 subjectList에 넣고 싶어요 그죠 그래서 메서드를 하나 만듭니다.

public addSubject(String name, int point) {   
	Subject subject = new Subject();
	subject.setName(name);
	subject.setScorePoint(point);
	subjectList.add(subject);
}  
그러면 학생마다 addSubject 메서드가 한번 불릴수도 있고 10번불리수도 있죠 10과목 듣는 애들은 10과목

10번점수가 나온애들은 10번 호출이 될거구요 한과목본애들은 1번 불릴수도 있죠 학생마다 수강한 과목을 

배열로 이렇게 관리를 하게되는거죠 그죠 다학생마다 배열이 따로따로 잡히는 요렇게 구성이 되어있습니다.

그러면 과목이 쭉 추가되고 나면 인제 이과목들에 대한 정보를 출력하도록 하겠습니다. 합계를 내기위해서 

total토탈이라는 변수를 하나 선언하구요 for(Subject subject : subjectList){

}

총점을 뺄거구요 하나씩 쭉 더할거에요 total += subject.getScorePoint(); 그래서 애를 쭉 더해주구요 

System.out,println(studentName + "학생의" + subject.getName()+"과목의 성적은 "+ subject.getScorePoint()+"입니다.";

과목마다 이렇게 점수가 나올거에요 이학생의 총점은 몇점입니다가 요렇게 나오도록 했습니다. 자 요서브젝트 리스트가 

누구꺼냐면 학생꺼고 이학생이 무슨과목을  어떻게 수강했느냐 요 메서드를 통해서 저희가 입력을 시킬거죠  그리고 

showScoreInfo()함수로 출력을 할겁니다. 저장을 하시고 오류가 다 없어졌죠 그래서 실제적으로 테스트할수  있는 

클레스를 돌려보도록 하겠습니다. ctrl+n 클레스 StudentSubjectTest 작성하시고 메인넣으시고 피니시

예제에 명시돼 있는 내용을 그대로 1001학번 Lee리 1002학번 김 두학생 이학생들의 정보를 넣고요 그다음에 

과목수강한것 내용넣고 점수넣고 출력한번 해보도록 하죠 학생두명을 만들어야 겠죠 Student studentLee = new Student(

1001, "Lee" 이학생이 수강한 과목이 StudentLee.addSubject("국어",100); StudentLee.addSubject("수학",50); 요렇게 쓰이구요 

그다음에 학생 한명 더 있죠 Student studentKim(1002,"Kim"); 

StudentKim.addSubject("국어",70); StudentKim.addSubject("수학",50);
StudentLee.addSubject("영어",100); studentLee.showScoreInfo(); 
System.out.println("============================");
studentKim.showScoreInfo();

실행을 해보시면 넵 각성적하고 총점하고 잘나오는거를 보실수 있었습니다. 챕터투가 다 마무리가 됐습니다. 

배운거 보시면 긴여정 24장까지 쭉 봤는데요 객체를 말씀을 드렸고 그다음에 그다음에 객체를 생성하는거 

그다음에 oop의 특징이죠 정보은닉 캡슐화 객체가 서로간에 역할을 하는 협력 네 그리고 이제 객체간에 

서로 공유할수 있는 스태틱변수 마지막으로 미리 조금 배웠지만 배열 이 배열을 활용해서 방금전에 좀 

여러개의 클래스가 같이 혼용이 되서 성적을 산출하는 이런 프로그램을 해봤습니다. 어 프로그램을 지금까지 

하면서 우리가 따로 ui가 없기때문에 웹프로그램같은 경우는 웹에서 데이터를 입력시키고 그걸 서버쪽에서

받아주고 이런거를 하는데 우리가 따로 ui가 없잖아요  입력 앱같은 경우는 핸드폰에서 입력하고 이렇게 하면 

되겠지만 그래서 계속 지금 하는 테스트 코드를 만들고 여기서 데이터를 입력하는것처럼 이렇게 해서 우리가 

만든 코드들을 직접 실행해 보고 있습니다.  그래서 제가 말씀드리는거는 메인을 두고 거꾸고 자꾸해보시라는

거에요 거꾸로 해보시다보면 여러분들이 객체를 만드는데 좀더 익숙해 질것 같습니다. 2장 전체를 공부하시느라

수고하셨고 3장에서 다시 챕터 쓰리에서 해보도록 하겠습니다.