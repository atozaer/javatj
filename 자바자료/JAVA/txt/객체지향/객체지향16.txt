자 오늘은 스태틱변수에 대해서 말씀을 드리도록 하겠습니다.

우리가 지금까지 멤버변수들을 만들어서 코딩을 했었는데요 어 프로그램을 하다보면 new 라고 인스턴스를

생성하면 각각 인스턴스가 생긴다고 했죠 그니깐 지난번에 내가 말씀을 드렸을때 가령 이제 new해서 

힙메모리에 스튜어던트다 한명을 생성을 하면 힙메모리에 하나의 인스턴스에 대한 메모리가 생성이 되고 

사각형을 그린다. 애가 Lee다 그리고 또한명의 학생을 만들었다. 그학생의 메모리가 생성이된다라고 말씀을 

드렸죠 그렇게 생성이 되면 그 학생에 대한 아이디 그다음 이름 name 이런것들의 메모리도 따로 생성이 됩니다.

그죠 kim 객체도 id,name 왜냐면 id도 다르고 name도 다를테니까 이런식으로 따로따로 생성이 되죠 그런데 

우리가 코딩을 하다보면 어 이인스턴스들 같은 클레스죠 동일한 클레스인데 이 동일한 클레스들이 공유할 

어떤 변수가 필요할 경우가 있어요 어 kim객체도쓰고 Lee객체도 쓰고 둘다 쓰는거죠 static값은 여러인스턴스가

동시에 업데이트할수도 있고 이값을 기준으로 원하는값을 호출해낼수도 있고 이런경우들이 있거든요 이런 변수

들을 어떻게 만들것이냐라는 거죠 일반 멤버변수로 하면 인스턴스마다 생성이 되니까 애는 일반멤버변수로 하면 

안됩니다. 애는 어떤 변수로 하냐 static키워드를 써서 스태틱변수라고 해요 여기 그림에 있는 것처럼 아시겠지만 

인스턴스가 여러개 있을때 이스태틱변수는 이 여러개의 인스턴스 동일한 클레스에서 생성된 여러개의 인스턴스가

공유할수 있는 변수입니다. 가령 예를 들어서 아까도 말씀드렸듯이 여러개 인스턴스에서 공유하는 기준값이 필요

한다라든가 우리가 어떤 아이디 학생이나 아니면 음 사번이나 어떤 자동차같은거 어떤 제품을 만들때 시리얼넘버나

이런거를 만든다라고 하면 어떤 순차적인 값이 필요하다. 중복되면 안되겠죠 그죠 그런 값들이 필요하다고  했을때 

각각 그런 인스턴스들에게 새로부여해줄 번호에 기준이 되는값 카드회사에서 새롭게 카드를 발급할때 카드번호

회사에 사원이 입사했을때 입사번호 이게 매회다르기는 하겠지만 어째든 기준이되는값이 하나 있고 이 값으로부터 

원하는 그런 값이 만들어지겠죠 그래서 그런 경우에 스태틱변수를 사용한다. 라는 것입니다. 스태틱변수는 이제

스태틱이라는 키워드가 그렇게 앞에 붙어요 스태틱이라는 키워드가 앞에 붙고 그다음에 인트일수도 있고 플로트

일수도 있고 데이타타입을 쓰시면 되구요 그다음에 변수명을 요렇게 쓰시면 됩니다. 인스턴스가 생성될때 만들어지는 

변수가 아니라고 했죠 그러면 스태틱변수는 언제 만들어지느냐 라는것을 우리가 생각해 보면 스태틱변수는 우리가 

하드디스크에 프로그램이 이렇게 있어요 이게 Program이고 사각형그리고 프로그램을 우리가 구동을 시키면  

프로그램은 메모리에 올라가게 됩니다. 그죠 애가 메모리데 메모리에 올라가게 되는데 이 메모리에 올라 갔을때

상태를 우리가 프로세스라고 해요 process 프로세스상태가 되고 실제적으로 애가 프로세스 자체가 도는게 아니라

나중에 말씀드릴일이 있겠지만 thread스레드의 상태로 되서 돌아가게 되는데 이때 메모리에 올라가게 될때

크게 프로그램은 두가지의 영역을 가지게 됩니다. 하나는 우리가  코드영역이라고 하구요 하나는 여러가지 용어가

있는데 이걸 데이터영역이라고도 하고 상수영역이라고도 하고 그다음에 우리가 static영역이라고도 할수 있습니다

근데 주로 데이터영역이라고 많이 쓰구요 코드영역에 들어가는 애들은 이젠 우리가 프로그램을 하면 프로그램

이런소스코드에 코드는 우리가 명령어 집합이라고 했죠 인스트럭션우리가 셋이라고 그러거든요 그래서 명령어

집합이 코드쪽에 들어가서 이게 라인과의라인으로 수행이 되는것이구요 그다음에 데이터영역에 들어가는건 

뭐냐면 처음에 메모리에 로딩이 될때 처음부터 메모리를 잡는 데이터들이 있어요 우리가 기존에 말했던것들중에

뭐가 있냐면 상수나 리터럴 말씀드린적이 있죠 이런영역이 콘스탄트영역에 잡힌다. 라고 말씀을 드렸었는데 

이런애들이 먼저 잡히고 그다음에 지금애기하는 static변수도 여기에 올라갑니다. 네 그래서 스태틱변수는 

인스턴스가 생성될때 마다 사용하는 메모리는 Heap힙메모리라고 말씀을 드렸고 음 이건 동적메모리라고 했죠 

인스턴스가 생성이 됐다가 인스턴스가 사라지는 순간 애도 가베지 콜렉터 GC에 의해서 나중에 수거가 된다 

메모리가 수거가 된다라고 말씀을 드렸는데 여기가 아닌 static변수는 사용하는 메모리공간이 아주  틀려요 

그래서 요기에 생성이 됩니다. 스태틱변수는 처음에 프로그램이 프로세스가 되서 메모리에로딩되는 순간 

데이터영역에 잡히고 그러면 언제 소멸이 되느냐 이프로그램이 다끝나서 메모리에서 언로드되는순간 

없어져요 네 그런 변수가 됩니다. 어 여기서 말씀드린것처럼 인스턴스생성하고 상관없이 사용하므로 

클레스이름으로  직접 참조를 해요 있다가 코딩하면서 제가 말씀을 드리겠지만 인스턴스변수로도 직접 

참조할수 있구요 그거보다는 클레스이름으로 직접 참조해서 사용을 합니다. 인스턴스생성하고는 상관없이

사용하는 그런 변수이기 때문이죠 우리가 예제를 한번 해 볼텐데요 자 여기서는 어떤 예제를 할거냐 

예제를 잠깐  설명을 드리고 저랑 같이 이클립스에서 같이 코딩을 해보겠습니다.

회사에 사원이 들어오면 사원한테 사번을 부여할거에요 그 사번을 부여할건데 이사번을 순차적으로 

부여하겠다는 거죠 처음에 기준인 값이 천이고 첫번째 생성된 사람은 천일 그다음은 천이 이렇게

부여를 하고 싶다. 라는 겁니다. 이거를 어떻게 프로그램할것인가 이제 클레스코드랑 테스트 코드를 

같이 보면서 저랑 어떤식으로 애가 돌아간다. 스태틱변수를 어떻게 사용한다라는것을 살펴보도록 

하겠습니다. 자 지난시간에 작업하던 이클립스를 여시구요 package를 생성하시고  오늘 kr.or.kh16

16장이지요 클레스 Employee를 만들어보겠습니다. Employee를 만드시는데요 어 아이디 그죠 

필요한 요소들을 생각해보면 여러가지 있겠죠 한 회사에 직원이 있다 직원의 속성에는 여러가지가 있겠지만 

private int  employeeId;가 있구요 private String employeeName; 그다음에 이사람이 private String department;부서

가 있을수 있겠죠 라고  만들었습니다. 지난시간에 해보셨죠 지난번에 해보셨죠 source에서 get/set함수 만들기

static 변수를 위에다가 한번 선언을 해볼게요 좀 있다가 애를 private으로 써 볼텐데 일단은 public 으로 해서

static이라는 키워드를 쓰시고 int인트한다음에 serialNum = 1000; 이렇게 줘볼게요 여기까지 임플루이 사원

만드셨구요 애가 돌아가는 테스트 코드를 만들어보겠습니다. 클레스 EmployeeTest 클레스에 메인넣으시고

어 예전에 했던 거를 복습을 해보면 컨스트럭터가 하나도 없으면 디폴트컨스트럭터가 만들어진다. 컨스트럭터

아직 안만들었으니까 Employee employeeLee = new Employee();

employeeLee.setEmployeeName("이순신");

시리얼번호가 아까 있었죠 그걸 한번출력을 해보겠습니다.

System.out.println(employeeLee.serialNum); 이상태에서는 아무것도 안했기 때문에 당연히 1000이 출력이 될겁니다.

Employee employeeKim = new Employee();

employeeKim.setEmployeeName("김유신"); 임플루이네임해서 이렇게 하시고 이번에는 임플루이김을 이용해서

employeeKim.serialNum++;시리얼넘버를 증가시켜볼까요 네 증가시켜봤습니다. 

요걸 증가시켜본 이유는 아까 말씀드렸듯이 스태틱변수는 인스턴스가 공유한다고 했는데 employeeLee에서는 

증가를 안시키구요 임플루이 kim에서만 지금증가를 시켰잖아요 정말 증가가 되는지 한번 보도록 하겠습니다.

두개의 참조변수를 이용해서 임플루이 employeeLee를 이용해서 serialNuum을 한번 출력을 해보구요 

그다음에 employeeKim.serialNum임플루이kim을 통해서 시리얼넘을 한번 출력을 한번 해볼게요 

런을 해보시면 둘다 증가가 됐죠 그죠 이거를 보셨을때 아 두개의 인스턴스가 하나의 메모리를 공유한다.

라는거를 아실수가 있습니다. 어 수업교안을 잠깐 보시면 있다가 제가 그 변수들 각 변수들과 다음강의죠

다음강의에 제가 변수들과 변수들이 쓰는 메모리와 이런것들을 정리를 해드릴거에요 그거를 정리를 해드리는 

이유는 우리가 프로그램을 구현할때 그런 제반적인 지식을 가지고 있어야 좀더 이해가 잘되고 효율적으로 

프로그램을 할수가 있거든요 그래서 이제 말씀을 드릴거구요 자 이런 그림의 형태가 될겁니다. 데이터영역

스택메모리 힙메모리 형식 제가 스튜어던트라는 그림으로 제가 했는데 임플루이Lee하고 임플루이Kim이라고

보셔도 됩니다. 두개의 이런변수가 있구요 그다음에 이두개의 변수가 애네는코드에서 보시면 메인안에 선언된

지역변수에요 임플루이타입하고 선언된 지역변수라고요 이런 지역변수들은 어디에 생기냐면 스택메모리에 

생긴다고 말씀을 드렸죠 애로 인해서 참조되는 인스턴스 메모리 점해서 이름가지고 오고 뭐 메소드호출하고 

이렇게 할수 있다고 말씀을 드렸고 그리고 애네들이 참조할수 있는 스태틱변수는 공유메모리에 이렇게 있습니다.

그래서 인스턴스들이 참조를 하고 스튜어던트리 스튜어던트손이 모두 참조할수있다. 라는거죠 우리가 프로그램에서

이거는 자바뿐만 아니라 다른 프로그램들도 프로그램언어들도 마찬가집니다. 거의 이런 세가지 영역에 메모리를 

사용하게 되는데 동적메모리 지금 제가 힙메모리라고 말한거는 동적메모리에요 필요할때 어로케이션 받아서 쓰고

다 쓰고 나면 프리시키거나 릴리이즈 시키는 이 동적메모리영역이고요 그다음에 펑션이 호출될때마다 그 펑션안에서

함수나 메서드죠 그안에서 사용하는 지역변수가 쓰는 메모리 그다음에 처음에 메모리가 로드될때부터 자리를 잡고 

계속 공유해서 쓰다가 프로그램이 언로드될때 사라지는영역 요게 데이터영역 콘스탄트영역 요런식으로 말씀을 

드리게 됩니다. 근데 지금 우리가 어디까지만 했냐면 아 이변수가 인스턴스끼리 공유된다라는 사실만 지금 같이 확인을 했죠

그러면 실제적으로 우리가 하고 싶은 거는 회사원이 입사할때마다 새로운사번을 부여해 주고 싶어요 

그 부분을 같이 코드해 보도록 하겠습니다. 

네 이클립스 다시 여시구요 여기보시면 음 생각해  보니까 이번호가 있고 시리얼넘이 증가되면 될것 같애요 그전에는 

컨스트럭터가 없었는데 컨스트럭터에서 이런작업은 해야 겠죠 객체가 생성될때 초기화작업은 생성자에서 한다라고 

말씀을  드렸고 그래서 public Employee(){ }생성자를 이렇게 만들었는데요 여기까지는 디폴트 생성자죠 디폴트생성자

안에도 필요하면 코드를 넣으시면 됩니다. 임플루이 사원이 생성될때마다 serialNum++이라는 변수는 하나씩증가를 

할거에요 한명이 생길때마다 하나씩 증가를 할건데 이변수는 공유할수 없죠 이변수를 사번아이디로 할수 없는 이유는 

이변수는 모두가 공유를 하니까 인스턴스가 모든 인스턴스 모든 사원들이 같은 사번을 가지게 되는거잖아요 어떻게 

해줘야 되느냐 멤버변수에다 복사를 해주시면 됩니다. employeeId = serialNum; employeeId는 기준값이 되는거고 

serialNum은 계속 증가하게되겠지요 하나씩 하나씩 각자 가지게 될겁니다. main을 보시면 생성이 될때마다 음값이 

증가를 하겠죠 강제적으로 증가한건 빼구요 employeeKim.serialNum++; 삭제하고 메인에서 이순신님의 사원은 

1001 김유신님의 사번은 1002가 됩니다. 확인하실수가 있습니다. 네 여기서 여기서 기억하셔야 이강의에서 기억하셔야

되는거는 여러인스턴스가 필요하는 공유하는 값이 필요하다. 그러면 개는 스태틱이란 애를 활용해서 쓴다. 지금은 

스태틱 변수만 써 봤잖아요 다음강의에서 스태틱메서드를 말씀을 드릴거구요 지금 이렇게 보시면 employeeLee.serialNum

에 보면 노란줄이 돼 있죠 이렇게 나와있는 이유는 뭐냐면 애는 클레스변수에요 말씀을 드렸듯이 애는 인스턴스의 생성하고는 

상관없이  사용하실수가 있습니다.  인스턴스생성하는 코드를 다 주석처리할게요 전부주석처리하면 employeeLee는 인스턴스

참조변수데 애를 안쓴다 필요없단말이죠 그죠  시리얼넘이라는 스태틱변수를 사용하실수가 있어요 그이유는 애는 이미

메모리에 올라와 있을때 만들었습니다. 그래서 직접 클레스로 이렇게 참조해서 많이 사용을 해요 클레스이름으로 아까

참조변수로 노란줄이 돼 있는 이유는 serialNum은 스태틱변수니까 클래스이름으로 참조해서 써라 라는 의미로 노란색

줄이 나왔습니다. 어 앞으로도 이젠 스태틱 변수도 그러구요 어다음에서 말씀드릴 스태틱 메서드도 그렇고 클레스이름으로

이렇게 참조해서 쓴다. 라는걸 알아두셨으면 좋겠습니다. 다음강의에서 스태틱메서드를 알아보도록 하겠습니다. 

 



