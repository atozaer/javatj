잠깐 생성자를 말씀드리면서 써봤는데요 여러가지 생성자를 같이 정의할수 있습니다.

그거를 뭐라고 그러냐면 생성자 오버로딩이라고 해요 

오버로딩이라는 개념은 메서드에도 사용되는 개념입니다. 

메서드 이름은 똑같고 매개변수만 다른경우 오버로딩된다라고 하구요 오버로딩이다라고 하구요 

우리가 이렇게 오버로딩을 제공하는 이유는 객체지향에서 사용하는쪽에 편의성을 위해서에요

에 보시면 어떤 생성자는 모든 세개의 매개변수를 받아서 생성할수 있다. 어떤생성자는 하나의 매개변수만이 필요하다.

라고 하면 그 모든거를 제공해주면 그거를 사용하는 클라이언트코드입장에서는 골라서 쓸수 있는거죠 그죠 그래서 여러분이

인제 JDK에 제공되는 여러가지 클레스들을 보면 여러가지 생성자를 제공해주는 클레스들이 있습니다.

그런 이유는 사용하는 쪽에서 필요에 따라서 그생성자를 쓰라는 것이죠 생성자를 구현해서 사용하시면 되고

말씀드렸듯이 클레스에 생성자를 따로 구현하시면 기본생성자는 제공되지 않습니다. 

클라이언트코드에서 여러생성자중에 필요에 따라서 호출해서 사용하실수가 있다.

요 예제는 제가 요전에 스튜어던트나 그런것들을 우리가 많이 해봤잖아요 그래서 유사한 예제라서 

직접 코딩은 안하고 제가 말로서 설명을 드리고 여러분은 직접 코딩을 해보시기 바랍니다.

간단한 회원에 대한 클레스를 하나 선언해 봤어요 유저인포점자바 라고 해서 userId, userPassword; 회원가입할때

필수요소죠 이름 주소 다음에 폰넘버 뭐 이런것들 근데 다 스트링으로 선언한 이유는 알파벳이들어갈수도 있고 

그다음에 폰넘버같은 경우는 0으로 시작하는 경우가 많기 때문에 숫자로 하기가 그래서 다 스트링으로 선언을

했습니다. 유저인포라는 객체를 하나 생성을 할건데 아까말씀드린데로 제가 이렇게 섰어요 그래서 그거를 서브밋

했을때 이객체가 처음에 생성이 될때 그죠 필요한 정보들 그정보들을이용해서 객체들을 생성을 했다. 라고 하면 

그때 유저아이디 패스워드유저네임 앞에다 this를 쓰셔야 멤버변수라는게 지정이 된다는거 말씀을 드렸고 

여기뒤에 있는 변수들은 매개변수로 넘어온 애네들도 지역변수에요 여기서만 쓰는 변수이기 때문에 

매개변수입니다. 어 그리고 유저의 정보를 출력하게끔 해놨죠 밑에 보시면 생성자가 두개이기 때문에 

두가지 방법으로 사용을 해봤습니다. 하나는 디폴트생성자를 이용을 해서 각각의 변수값을 넣는 요런

방법을 한번 해봤구요 또하나는 아까도 말씀을 드렸듯이 생성을 할때 매개변를 직접넣어서 하는 이런

코드를 넣어봤죠 요 전에 했던 스튜어던트랑 비슷한 전반적으로 비슷한 구조구요 어 제가 말씀드리고 

싶은 거는 인제 여러분들이 이런코드를 할때 무조건 많이 제공을 해준다고 좋은것도 아닙니다. 

우선 적절하게 필요한만큼 필요에 의해서 코드를 우리가 객체를 만들면 되겠구요 

그다음에 디폴트 콘스트럭트 같은 경우는 말씀드렸지만 혹시 외부에서 제공이 되면 문제가 될수 있다.

라는 경우에는 제공을 하지 않아도 된다. 라는거 말씀을 드렸습니다. 그런데 내가 생성자를 하나도 

만들지 않으면 디폴트 컨스트럭터는 항상 제공이 된다. 라는거 여기까지 생성자에 대해서 알아두시면 

좋을것 같습니다.